{"version":3,"sources":["../lib/p5.play.js"],"names":["root","factory","define","amd","p5","prototype","registerMethod","p5PlayInit","camera","Camera","init","defineLazyP5Property","name","getter","Object","defineProperty","configurable","enumerable","get","context","_isGlobal","window","_p5PlayProperties","call","boundConstructorFactory","constructor","Error","createBoundConstructor","pInst","F","args","Array","slice","arguments","apply","concat","createPInstBinder","pInstBind","methodName","method","bind","abs","radians","dist","degrees","pow","round","Group","spriteUpdate","createSprite","x","y","width","height","s","Sprite","depth","allSprites","maxDepth","add","removeSprite","sprite","remove","updateSprites","upd","i","size","update","getSprites","length","toArray","arr","j","isTagged","push","drawSprites","group","draw","drawSprite","display","loadAnimation","construct","Animation","loadSpriteSheet","SpriteSheet","animation","anim","keyStates","mouseStates","KEY_IS_UP","KEY_WENT_DOWN","KEY_IS_DOWN","KEY_WENT_UP","keyWentDown","key","_isKeyInState","keyWentUp","keyDown","state","keyCode","_p5play","_keyCodeFromAlias","undefined","keyIsDown","mouseDown","buttonCode","_isMouseButtonInState","mouseUp","mouseWentUp","mouseWentDown","LEFT","mouseIsPressed","mouseButton","KEY","KEY_DEPRECATIONS","alias","toUpperCase","_warn","readPresses","btn","useQuadTree","use","quadTree","active","Quadtree","_x","_y","_w","_h","createVector","color","random","print","pop","colorMode","noStroke","rectMode","ellipseMode","imageMode","translate","scale","rotate","stroke","strokeWeight","line","noFill","fill","textAlign","textSize","text","rect","cos","sin","atan2","RGB","CENTER","BOTTOM","position","previousPosition","newPosition","deltaX","deltaY","velocity","maxSpeed","friction","collider","colliderType","touching","left","right","top","bottom","mass","immovable","restitution","_rotation","set","value","rotateToDirection","setSpeed","getSpeed","rotationSpeed","dirX","dirY","visible","mouseActive","mouseIsOver","_internalWidth","_internalHeight","originalWidth","originalHeight","removed","life","debug","shapeColor","groups","animations","currentAnimation","_syncAnimationSizes","getWidth","getHeight","getBoundingBox","_getScaleX","_getScaleY","frameChanged","limitSpeed","mag","getDirection","rotation","AABB","t","_angleMode","RADIANS","extents","originalExtents","CircleCollider","radius","originalRadius","setDefaultCollider","mouseUpdate","onMouseOver","onMouseOut","onMousePressed","onMouseReleased","insert","mouseWasOver","mouseWasPressed","mousePosition","mouseX","mouseY","center","setCollider","type","offsetX","offsetY","TypeError","v","Math","floor","max","w","h","mirrorX","dir","mirrorY","removeObject","setVelocity","direction","isNaN","addToGroup","speed","k","angle","a","addSpeed","attractionPoint","magnitude","pointX","pointY","addImage","Image","addAnimation","label","sourceAnimation","newAnimation","clone","isSpriteAnimation","animFrames","changeImage","changeAnimation","getAnimationLabel","overlapPixel","point","img","getFrameImage","values","overlapPoint","sqRadius","sqDist","overlap","target","callback","AABBops","collide","displace","bounce","result","others","retrieveFromGroup","displacement","other","over","tunnelX","tunnelY","c","e","bbox","offset","mult","newVelX1","newVelY1","newVelX2","newVelY2","sub","dx1","Vector","dx2","magSq","totalMass","m1","m2","newVel1","dot","newVel2","zoom","on","cameraPush","off","cameraPop","array","contains","indexOf","item","len","virtEquals","removeSprites","clear","splice","reduce","Infinity","minDepth","min","sort","b","obj","equals","Function","_groupCollide","didCollide","_center","_radius","_offset","ellipse","r","thisCenterX","thisCenterY","otherCenterX","otherCenterY","radii","intersection","_extents","PI","copy","w2","h2","md","minkowskiDifference","pt","distance","boundsPoint","closestPointOnBoundsToPoint","xOverlap","yOverlap","d","topLeft","fullSize","div","minDist","frameArguments","images","frame","cycles","targetFrame","offX","offY","frameDelay","playing","looping","imageCollider","from","to","ext1","substring","ext2","digits1","digits2","charAt","prefix1","prefix2","number1","parseInt","number2","loadImage","fileName","nf","spriteSheet","frames","myClone","xpos","ypos","frame_info","image","previousFrame","play","stop","rewind","changeFrame","f","nextFrame","goToFrame","toFrame","getFrame","getLastFrame","getImageAt","spriteSheetArgs","frame_width","frame_height","num_frames","_generateSheetFrames","sX","sY","isArray","drawFrame","frame_name","frameToDraw","dWidth","dHeight","cloneFrame","bounds","max_objects","max_levels","level","objects","object_refs","nodes","updateBounds","getAll","split","nextLevel","subWidth","subHeight","getIndex","pRect","index","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","retrieve","returnObjects","results","candidates","getObjectNode","node","cleanup","updateTree","message","console","warn","log"],"mappings":"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","file":"p5.play.895723a0.js","sourceRoot":"../src","sourcesContent":["/*\np5.play\nby Paolo Pedercini/molleindustria, 2015\nhttp://molleindustria.org/\n*/\n\n(function(root, factory) {\nif (typeof define === 'function' && define.amd)\ndefine('p5.play', ['p5'], function(p5) { (factory(p5)); });\n//else if (typeof exports === 'object')\n//factory(require('../p5'));\nelse\nfactory(root.p5);\n}(this, function(p5) {\n/**\n * p5.play is a library for p5.js to facilitate the creation of games and gamelike\n * projects.\n *\n * It provides a flexible Sprite class to manage visual objects in 2D space\n * and features such as animation support, basic collision detection\n * and resolution, mouse and keyboard interactions, and a virtual camera.\n *\n * p5.play is not a box2D-derived physics engine, it doesn't use events, and it's\n * designed to be understood and possibly modified by intermediate programmers.\n *\n * See the examples folder for more info on how to use this library.\n *\n * @module p5.play\n * @submodule p5.play\n * @for p5.play\n * @main\n */\n\n// =============================================================================\n//                         initialization\n// =============================================================================\n\n// This is the new way to initialize custom p5 properties for any p5 instance.\n// The goal is to migrate lazy P5 properties over to this method.\n// @see https://github.com/molleindustria/p5.play/issues/46\np5.prototype.registerMethod('init', function p5PlayInit() {\n  /**\n   * The sketch camera automatically created at the beginning of a sketch.\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disabled anytime during the draw\n   * cycle, for example to draw interface elements in an absolute position.\n   *\n   * @property camera\n   * @type {camera}\n   */\n  this.camera = new Camera(this, 0, 0, 1);\n  this.camera.init = false;\n});\n\n// This provides a way for us to lazily define properties that\n// are global to p5 instances.\n//\n// Note that this isn't just an optimization: p5 currently provides no\n// way for add-ons to be notified when new p5 instances are created, so\n// lazily creating these properties is the *only* mechanism available\n// to us. For more information, see:\n//\n// https://github.com/processing/p5.js/issues/1263\nfunction defineLazyP5Property(name, getter) {\n  Object.defineProperty(p5.prototype, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var context = (this instanceof p5 && !this._isGlobal) ? this : window;\n\n      if (typeof(context._p5PlayProperties) === 'undefined') {\n        context._p5PlayProperties = {};\n      }\n      if (!(name in context._p5PlayProperties)) {\n        context._p5PlayProperties[name] = getter.call(context);\n      }\n      return context._p5PlayProperties[name];\n    }\n  });\n}\n\n// This returns a factory function, suitable for passing to\n// defineLazyP5Property, that returns a subclass of the given\n// constructor that is always bound to a particular p5 instance.\nfunction boundConstructorFactory(constructor) {\n  if (typeof(constructor) !== 'function')\n    throw new Error('constructor must be a function');\n\n  return function createBoundConstructor() {\n    var pInst = this;\n\n    function F() {\n      var args = Array.prototype.slice.call(arguments);\n\n      return constructor.apply(this, [pInst].concat(args));\n    }\n    F.prototype = constructor.prototype;\n\n    return F;\n  };\n}\n\n// This is a utility that makes it easy to define convenient aliases to\n// pre-bound p5 instance methods.\n//\n// For example:\n//\n//   var pInstBind = createPInstBinder(pInst);\n//\n//   var createVector = pInstBind('createVector');\n//   var loadImage = pInstBind('loadImage');\n//\n// The above will create functions createVector and loadImage, which can be\n// used similar to p5 global mode--however, they're bound to specific p5\n// instances, and can thus be used outside of global mode.\nfunction createPInstBinder(pInst) {\n  return function pInstBind(methodName) {\n    var method = pInst[methodName];\n\n    if (typeof(method) !== 'function')\n      throw new Error('\"' + methodName + '\" is not a p5 method');\n    return method.bind(pInst);\n  };\n}\n\n// These are utility p5 functions that don't depend on p5 instance state in\n// order to work properly, so we'll go ahead and make them easy to\n// access without needing to bind them to a p5 instance.\nvar abs = p5.prototype.abs;\nvar radians = p5.prototype.radians;\nvar dist = p5.prototype.dist;\nvar degrees = p5.prototype.degrees;\nvar pow = p5.prototype.pow;\nvar round = p5.prototype.round;\n\n\n// =============================================================================\n//                         p5 additions\n// =============================================================================\n\n/**\n* A Group containing all the sprites in the sketch.\n*\n* @property allSprites\n* @type {Group}\n*/\n\ndefineLazyP5Property('allSprites', function() {\n  return new p5.prototype.Group();\n});\n\np5.prototype.spriteUpdate = true;\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * Sprites created using createSprite (the preferred way) are added to the\n   * allSprites group and given a depth value that puts it in front of all\n   * other sprites.\n   *\n   * @method createSprite\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} width Width of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @param {Number} height Height of the placeholder rectangle and of the\n   *                       collider until an image or new collider are set\n   * @return {Object} The new sprite instance\n   */\n\np5.prototype.createSprite = function(x, y, width, height) {\n  var s = new Sprite(this, x, y, width, height);\n  s.depth = this.allSprites.maxDepth()+1;\n  this.allSprites.add(s);\n  return s;\n};\n\n\n/**\n   * Removes a Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   * Equivalent to Sprite.remove()\n   *\n   * @method removeSprite\n   * @param {Object} sprite Sprite to be removed\n*/\np5.prototype.removeSprite = function(sprite) {\n  sprite.remove();\n};\n\n/**\n* Updates all the sprites in the sketch (position, animation...)\n* it's called automatically at every draw().\n* It can be paused by passing a parameter true or false;\n* Note: it does not render the sprites.\n*\n* @method updateSprites\n* @param {Boolean} updating false to pause the update, true to resume\n*/\np5.prototype.updateSprites = function(upd) {\n\n  if(upd === false)\n    this.spriteUpdate = false;\n  if(upd === true)\n    this.spriteUpdate = true;\n\n  if(this.spriteUpdate)\n  for(var i = 0; i<this.allSprites.size(); i++)\n  {\n    this.allSprites.get(i).update();\n  }\n};\n\n/**\n* Returns all the sprites in the sketch as an array\n*\n* @method getSprites\n* @return {Array} Array of Sprites\n*/\np5.prototype.getSprites = function() {\n\n  //draw everything\n  if(arguments.length===0)\n  {\n    return this.allSprites.toArray();\n  }\n  else\n  {\n    var arr = [];\n    //for every tag\n    for(var j=0; j<arguments.length; j++)\n    {\n      for(var i = 0; i<this.allSprites.size(); i++)\n      {\n        if(this.allSprites.get(i).isTagged(arguments[j]))\n          arr.push(this.allSprites.get(i));\n      }\n    }\n\n    return arr;\n  }\n\n};\n\n/**\n* Displays a Group of sprites.\n* If no parameter is specified, draws all sprites in the\n* sketch.\n* The drawing order is determined by the Sprite property \"depth\"\n*\n* @method drawSprites\n* @param {Group} [group] Group of Sprites to be displayed\n*/\np5.prototype.drawSprites = function(group) {\n  // If no group is provided, draw the allSprites group.\n  group = group || this.allSprites;\n\n  if (typeof group.draw !== 'function')\n  {\n    throw('Error: with drawSprites you can only draw all sprites or a group');\n  }\n\n  group.draw();\n};\n\n/**\n* Displays a Sprite.\n* To be typically used in the main draw function.\n*\n* @method drawSprite\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.drawSprite = function(sprite) {\n  if(sprite)\n  sprite.display();\n};\n\n/**\n* Loads an animation.\n* To be typically used in the preload() function of the sketch.\n*\n* @method loadAnimation\n* @param {Sprite} sprite Sprite to be displayed\n*/\np5.prototype.loadAnimation = function() {\n  return construct(this.Animation, arguments);\n};\n\n/**\n * Loads a Sprite Sheet.\n * To be typically used in the preload() function of the sketch.\n *\n * @method loadSpriteSheet\n */\np5.prototype.loadSpriteSheet = function() {\n  return construct(this.SpriteSheet, arguments);\n};\n\n/**\n* Displays an animation.\n*\n* @method animation\n* @param {Animation} anim Animation to be displayed\n* @param {Number} x X coordinate\n* @param {Number} y Y coordinate\n*\n*/\np5.prototype.animation = function(anim, x, y) {\n  anim.draw(x, y);\n};\n\n//variable to detect instant presses\ndefineLazyP5Property('_p5play', function() {\n  return {\n    keyStates: {},\n    mouseStates: {}\n  };\n});\n\nvar KEY_IS_UP = 0;\nvar KEY_WENT_DOWN = 1;\nvar KEY_IS_DOWN = 2;\nvar KEY_WENT_UP = 3;\n\n/**\n* Detects if a key was pressed during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Super Mario jumping.\n*\n* @method keyWentDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was pressed\n*/\np5.prototype.keyWentDown = function(key) {\n  return this._isKeyInState(key, KEY_WENT_DOWN);\n};\n\n\n/**\n* Detects if a key was released during the last cycle.\n* It can be used to trigger events once, when a key is pressed or released.\n* Example: Spaceship shooting.\n*\n* @method keyWentUp\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key was released\n*/\np5.prototype.keyWentUp = function(key) {\n  return this._isKeyInState(key, KEY_WENT_UP);\n};\n\n/**\n* Detects if a key is currently pressed\n* Like p5 keyIsDown but accepts strings and codes\n*\n* @method keyDown\n* @param {Number|String} key Key code or character\n* @return {Boolean} True if the key is down\n*/\np5.prototype.keyDown = function(key) {\n  return this._isKeyInState(key, KEY_IS_DOWN);\n};\n\n/**\n * Detects if a key is in the given state during the last cycle.\n * Helper method encapsulating common key state logic; it may be preferable\n * to call keyDown or other methods directly.\n *\n * @private\n * @method _isKeyInState\n * @param {Number|String} key Key code or character\n * @param {Number} state Key state to check against\n * @return {Boolean} True if the key is in the given state\n */\np5.prototype._isKeyInState = function(key, state) {\n  var keyCode;\n  var keyStates = this._p5play.keyStates;\n\n  if(typeof key === 'string')\n  {\n    keyCode = this._keyCodeFromAlias(key);\n  }\n  else\n  {\n    keyCode = key;\n  }\n\n  //if undefined start checking it\n  if(keyStates[keyCode]===undefined)\n  {\n    if(this.keyIsDown(keyCode))\n      keyStates[keyCode] = KEY_IS_DOWN;\n    else\n      keyStates[keyCode] = KEY_IS_UP;\n  }\n\n  return (keyStates[keyCode] === state);\n};\n\n/**\n* Detects if a mouse button is currently down\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseDown\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is down\n*/\np5.prototype.mouseDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_DOWN);\n};\n\n/**\n* Detects if a mouse button is currently up\n* Combines mouseIsPressed and mouseButton of p5\n*\n* @method mouseUp\n* @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n* @return {Boolean} True if the button is up\n*/\np5.prototype.mouseUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_IS_UP);\n};\n\n/**\n * Detects if a mouse button was released during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentUp\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just released\n */\np5.prototype.mouseWentUp = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_UP);\n};\n\n\n/**\n * Detects if a mouse button was pressed during the last cycle.\n * It can be used to trigger events once, to be checked in the draw cycle\n *\n * @method mouseWentDown\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @return {Boolean} True if the button was just pressed\n */\np5.prototype.mouseWentDown = function(buttonCode) {\n  return this._isMouseButtonInState(buttonCode, KEY_WENT_DOWN);\n};\n\n/**\n * Detects if a mouse button is in the given state during the last cycle.\n * Helper method encapsulating common mouse button state logic; it may be\n * preferable to call mouseWentUp, etc, directly.\n *\n * @private\n * @method _isMouseButtonInState\n * @param {Number} [buttonCode] Mouse button constant LEFT, RIGHT or CENTER\n * @param {Number} state\n * @return {boolean} True if the button was in the given state\n */\np5.prototype._isMouseButtonInState = function(buttonCode, state) {\n  var mouseStates = this._p5play.mouseStates;\n\n  if(buttonCode === undefined)\n    buttonCode = this.LEFT;\n\n  //undefined = not tracked yet, start tracking\n  if(mouseStates[buttonCode]===undefined)\n  {\n  if(this.mouseIsPressed && this.mouseButton === buttonCode)\n    mouseStates[buttonCode] = KEY_IS_DOWN;\n  else\n    mouseStates[buttonCode] = KEY_IS_UP;\n  }\n\n  return (mouseStates[buttonCode] === state);\n};\n\n\n/**\n * An object storing all useful keys for easy access\n * Key.tab = 9\n *\n * @private\n * @property KEY\n * @type {Object}\n */\np5.prototype.KEY = {\n    'BACKSPACE': 8,\n    'TAB': 9,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'CTRL': 17,\n    'ALT': 18,\n    'PAUSE': 19,\n    'CAPS_LOCK': 20,\n    'ESC': 27,\n    'SPACE': 32,\n    ' ': 32,\n    'PAGE_UP': 33,\n    'PAGE_DOWN': 34,\n    'END': 35,\n    'HOME': 36,\n    'LEFT_ARROW': 37,\n    'LEFT': 37,\n    'UP_ARROW': 38,\n    'UP': 38,\n    'RIGHT_ARROW': 39,\n    'RIGHT': 39,\n    'DOWN_ARROW': 40,\n    'DOWN': 40,\n    'INSERT': 45,\n    'DELETE': 46,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    '0NUMPAD': 96,\n    '1NUMPAD': 97,\n    '2NUMPAD': 98,\n    '3NUMPAD': 99,\n    '4NUMPAD': 100,\n    '5NUMPAD': 101,\n    '6NUMPAD': 102,\n    '7NUMPAD': 103,\n    '8NUMPAD': 104,\n    '9NUMPAD': 105,\n    'MULTIPLY': 106,\n    'PLUS': 107,\n    'MINUS': 109,\n    'DOT': 110,\n    'SLASH1': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'EQUAL': 187,\n    'COMMA': 188,\n    'SLASH': 191,\n    'BACKSLASH': 220\n};\n\n/**\n * An object storing deprecated key aliases, which we still support but\n * should be mapped to valid aliases and generate warnings.\n *\n * @private\n * @property KEY_DEPRECATIONS\n * @type {Object}\n */\np5.prototype.KEY_DEPRECATIONS = {\n  'MINUT': 'MINUS',\n  'COMA': 'COMMA'\n};\n\n/**\n * Given a string key alias (as defined in the KEY property above), look up\n * and return the numeric JavaScript key code for that key.  If a deprecated\n * alias is passed (as defined in the KEY_DEPRECATIONS property) it will be\n * mapped to a valid key code, but will also generate a warning about use\n * of the deprecated alias.\n *\n * @private\n * @method _keyCodeFromAlias\n * @param {!string} alias - a case-insensitive key alias\n * @return {number|undefined} a numeric JavaScript key code, or undefined\n *          if no key code matching the given alias is found.\n */\np5.prototype._keyCodeFromAlias = function(alias) {\n  alias = alias.toUpperCase();\n  if (this.KEY_DEPRECATIONS[alias]) {\n    this._warn('Key literal \"' + alias + '\" is deprecated and may be removed ' +\n      'in a future version of p5.play. ' +\n      'Please use \"' + this.KEY_DEPRECATIONS[alias] + '\" instead.');\n    alias = this.KEY_DEPRECATIONS[alias];\n  }\n  return this.KEY[alias];\n};\n\n//pre draw: detect keyStates\np5.prototype.readPresses = function() {\n  var keyStates = this._p5play.keyStates;\n  var mouseStates = this._p5play.mouseStates;\n\n  for (var key in keyStates) {\n    if(this.keyIsDown(key)) //if is down\n    {\n      if(keyStates[key] === KEY_IS_UP)//and was up\n        keyStates[key] = KEY_WENT_DOWN;\n      else\n        keyStates[key] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(keyStates[key] === KEY_IS_DOWN)//and was up\n        keyStates[key] = KEY_WENT_UP;\n      else\n        keyStates[key] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n  //mouse\n  for (var btn in mouseStates) {\n\n    if(this.mouseIsPressed && this.mouseButton === btn) //if is down\n    {\n      if(mouseStates[btn] === KEY_IS_UP)//and was up\n        mouseStates[btn] = KEY_WENT_DOWN;\n      else\n        mouseStates[btn] = KEY_IS_DOWN; //now is simply down\n    }\n    else //if it's up\n    {\n      if(mouseStates[btn] === KEY_IS_DOWN)//and was up\n        mouseStates[btn] = KEY_WENT_UP;\n      else\n        mouseStates[btn] = KEY_IS_UP; //now is simply down\n    }\n  }\n\n};\n\n/**\n* Turns the quadTree on or off.\n* A quadtree is a data structure used to optimize collision detection.\n* It can improve performance when there is a large number of Sprites to be\n* checked continuously for overlapping.\n*\n* p5.play will create and update a quadtree automatically.\n*\n* @method useQuadTree\n* @param {Boolean} use Pass true to enable, false to disable\n*/\np5.prototype.useQuadTree = function(use) {\n\n  if(this.quadTree !== undefined)\n  {\n    if(use === undefined)\n      return this.quadTree.active;\n    else if(use)\n      this.quadTree.active = true;\n    else\n      this.quadTree.active = false;\n  }\n  else\n    return false;\n};\n\n//the actual quadTree\ndefineLazyP5Property('quadTree', function() {\n  return new Quadtree({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }, 4);\n});\n\n/*\n//framerate independent delta, doesn't really work\np5.prototype.deltaTime = 1;\n\nvar now = Date.now();\nvar then = Date.now();\nvar INTERVAL_60 = 0.0166666; //60 fps\n\nfunction updateDelta() {\nthen = now;\nnow = Date.now();\ndeltaTime = ((now - then) / 1000)/INTERVAL_60; // seconds since last frame\n}\n*/\n\n/**\n   * A Sprite is the main building block of p5.play:\n   * an element able to store images or animations with a set of\n   * properties such as position and visibility.\n   * A Sprite can have a collider that defines the active area to detect\n   * collisions or overlappings with other sprites and mouse interactions.\n   *\n   * To create a Sprite, use\n   * {{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}.\n   *\n   * @class Sprite\n   */\n\n// For details on why these docs aren't in a YUIDoc comment block, see:\n//\n// https://github.com/molleindustria/p5.play/pull/67\n//\n// @param {Number} x Initial x coordinate\n// @param {Number} y Initial y coordinate\n// @param {Number} width Width of the placeholder rectangle and of the\n//                       collider until an image or new collider are set\n// @param {Number} height Height of the placeholder rectangle and of the\n//                        collider until an image or new collider are set\nfunction Sprite(pInst, _x, _y, _w, _h) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n  var color = pInstBind('color');\n  var random = pInstBind('random');\n  var print = pInstBind('print');\n  var push = pInstBind('push');\n  var pop = pInstBind('pop');\n  var colorMode = pInstBind('colorMode');\n  var noStroke = pInstBind('noStroke');\n  var rectMode = pInstBind('rectMode');\n  var ellipseMode = pInstBind('ellipseMode');\n  var imageMode = pInstBind('imageMode');\n  var translate = pInstBind('translate');\n  var scale = pInstBind('scale');\n  var rotate = pInstBind('rotate');\n  var stroke = pInstBind('stroke');\n  var strokeWeight = pInstBind('strokeWeight');\n  var line = pInstBind('line');\n  var noFill = pInstBind('noFill');\n  var fill = pInstBind('fill');\n  var textAlign = pInstBind('textAlign');\n  var textSize = pInstBind('textSize');\n  var text = pInstBind('text');\n  var rect = pInstBind('rect');\n  var cos = pInstBind('cos');\n  var sin = pInstBind('sin');\n  var atan2 = pInstBind('atan2');\n\n  var quadTree = pInst.quadTree;\n  var camera = pInst.camera;\n\n\n  // These are p5 constants that we'd like easy access to.\n  var RGB = p5.prototype.RGB;\n  var CENTER = p5.prototype.CENTER;\n  var LEFT = p5.prototype.LEFT;\n  var BOTTOM = p5.prototype.BOTTOM;\n\n  /**\n  * The sprite's position of the sprite as a vector (x,y).\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = createVector(_x, _y);\n\n  /**\n  * The sprite's position at the beginning of the last update as a vector (x,y).\n  * @property previousPosition\n  * @type {p5.Vector}\n  */\n  this.previousPosition = createVector(_x, _y);\n\n  /*\n  The sprite's position at the end of the last update as a vector (x,y).\n  Note: this will differ from position whenever the position is changed\n  directly by assignment.\n  */\n  this.newPosition = createVector(_x, _y);\n\n  //Position displacement on the x coordinate since the last update\n  this.deltaX = 0;\n  this.deltaY = 0;\n\n  /**\n  * The sprite's velocity as a vector (x,y)\n  * Velocity is speed broken down to its vertical and horizontal components.\n  *\n  * @property velocity\n  * @type {p5.Vector}\n  */\n  this.velocity = createVector(0, 0);\n\n  /**\n  * Set a limit to the sprite's scalar speed regardless of the direction.\n  * The value can only be positive. If set to -1, there's no limit.\n  *\n  * @property maxSpeed\n  * @type {Number}\n  * @default -1\n  */\n  this.maxSpeed = -1;\n\n  /**\n  * Friction factor, reduces the sprite's velocity.\n  * The friction should be close to 0 (eg. 0.01)\n  * 0: no friction\n  * 1: full friction\n  *\n  * @property friction\n  * @type {Number}\n  * @default 0\n  */\n  this.friction = 0;\n\n  /**\n  * The sprite's current collider.\n  * It can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\n  * or a circular collider.\n  * If the sprite is checked for collision, bounce, overlapping or mouse events the\n  * collider is automatically created from the width and height\n  * of the sprite or from the image dimension in case of animate sprites\n  *\n  * You can set a custom collider with Sprite.setCollider\n  *\n  * @property collider\n  * @type {Object}\n  */\n  this.collider = undefined;\n\n  //internal use\n  //\"default\" - no image or custom collider is specified, use the shape width / height\n  //\"custom\" - specified with setCollider\n  //\"image\" - no collider is set with setCollider and an image is added\n  this.colliderType = 'none';\n\n  /**\n  * Object containing information about the most recent collision/overlapping\n  * To be typically used in combination with Sprite.overlap or Sprite.collide\n  * functions.\n  * The properties are touching.left, touching.right, touching.top,\n  * touching.bottom and are either true or false depending on the side of the\n  * collider.\n  *\n  * @property touching\n  * @type {Object}\n  */\n  this.touching = {};\n  this.touching.left = false;\n  this.touching.right = false;\n  this.touching.top = false;\n  this.touching.bottom = false;\n\n  /**\n  * The mass determines the velocity transfer when sprites bounce\n  * against each other. See Sprite.bounce\n  * The higher the mass the least the sprite will be affected by collisions.\n  *\n  * @property mass\n  * @type {Number}\n  * @default 1\n  */\n  this.mass = 1;\n\n  /**\n  * If set to true the sprite won't bounce or be displaced by collisions\n  * Simulates an infinite mass or an anchored object.\n  *\n  * @property immovable\n  * @type {Boolean}\n  * @default false\n  */\n  this.immovable = false;\n\n  //Coefficient of restitution - velocity lost in the bouncing\n  //0 perfectly inelastic , 1 elastic, > 1 hyper elastic\n\n  /**\n  * Coefficient of restitution. The velocity lost after bouncing.\n  * 1: perfectly elastic, no energy is lost\n  * 0: perfectly inelastic, no bouncing\n  * less than 1: inelastic, this is the most common in nature\n  * greater than 1: hyper elastic, energy is increased like in a pinball bumper\n  *\n  * @property restitution\n  * @type {Number}\n  * @default 1\n  */\n  this.restitution = 1;\n\n  /**\n  * Rotation in degrees of the visual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotation\n  * @type {Number}\n  * @default 0\n  */\n  Object.defineProperty(this, 'rotation', {\n    enumerable: true,\n    get: function() {\n      return this._rotation;\n    },\n    set: function(value) {\n      this._rotation = value;\n      if (this.rotateToDirection) {\n        this.setSpeed(this.getSpeed(), value);\n      }\n    }\n  });\n\n  /**\n  * Internal rotation variable (expressed in degrees).\n  * Note: external callers access this through the rotation property above.\n  *\n  * @private\n  * @property _rotation\n  * @type {Number}\n  * @default 0\n  */\n  this._rotation = 0;\n\n  /**\n  * Rotation change in degrees per frame of thevisual element (image or animation)\n  * Note: this is not the movement's direction, see getDirection.\n  *\n  * @property rotationSpeed\n  * @type {Number}\n  * @default 0\n  */\n  this.rotationSpeed = 0;\n\n\n  /**\n  * Automatically lock the rotation property of the visual element\n  * (image or animation) to the sprite's movement direction and vice versa.\n  *\n  * @property rotateToDirection\n  * @type {Boolean}\n  * @default false\n  */\n  this.rotateToDirection = false;\n\n\n  /**\n  * Determines the rendering order within a group: a sprite with\n  * lower depth will appear below the ones with higher depth.\n  *\n  * Note: drawing a group before another with drawSprites will make\n  * its members appear below the second one, like in normal p5 canvas\n  * drawing.\n  *\n  * @property depth\n  * @type {Number}\n  * @default One more than the greatest existing sprite depth, when calling\n  *          createSprite().  When calling new Sprite() directly, depth will\n  *          initialize to 0 (not recommended).\n  */\n  this.depth = 0;\n\n  /**\n  * Determines the sprite's scale.\n  * Example: 2 will be twice the native size of the visuals,\n  * 0.5 will be half. Scaling up may make images blurry.\n  *\n  * @property scale\n  * @type {Number}\n  * @default 1\n  */\n  this.scale = 1;\n\n  var dirX = 1;\n  var dirY = 1;\n\n  /**\n  * The sprite's visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to true sprite will track its mouse state.\n  * the properties mouseIsPressed and mouseIsOver will be updated.\n  * Note: automatically set to true if the functions\n  * onMouseReleased or onMousePressed are set.\n  *\n  * @property mouseActive\n  * @type {Boolean}\n  * @default false\n  */\n  this.mouseActive = false;\n\n  /**\n  * True if mouse is on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsOver\n  * @type {Boolean}\n  */\n  this.mouseIsOver = false;\n\n  /**\n  * True if mouse is pressed on the sprite's collider.\n  * Read only.\n  *\n  * @property mouseIsPressed\n  * @type {Boolean}\n  */\n  this.mouseIsPressed = false;\n\n  /*\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this._internalWidth = _w;\n\n  /*\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  * Used internally to make calculations and draw the sprite.\n  *\n  * @private\n  * @property _internalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this._internalHeight = _h;\n\n  /*\n   * _internalWidth and _internalHeight are used for all p5.play\n   * calculations, but width and height can be extended. For example,\n   * you may want users to always get and set a scaled width:\n      Object.defineProperty(this, 'width', {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n          return this._internalWidth * this.scale;\n        },\n        set: function(value) {\n          this._internalWidth = value / this.scale;\n        }\n      });\n   */\n\n  /**\n  * Width of the sprite's current image.\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property width\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'width', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalWidth;\n    },\n    set: function(value) {\n      this._internalWidth = value;\n    }\n  });\n\n  if(_w === undefined)\n    this.width = 100;\n  else\n    this.width = _w;\n\n  /**\n  * Height of the sprite's current image.\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property height\n  * @type {Number}\n  * @default 100\n  */\n  Object.defineProperty(this, 'height', {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this._internalHeight;\n    },\n    set: function(value) {\n      this._internalHeight = value;\n    }\n  });\n\n  if(_h === undefined)\n    this.height = 100;\n  else\n    this.height = _h;\n\n  /**\n  * Unscaled width of the sprite\n  * If no images or animations are set it's the width of the\n  * placeholder rectangle.\n  *\n  * @property originalWidth\n  * @type {Number}\n  * @default 100\n  */\n  this.originalWidth = this._internalWidth;\n\n  /**\n  * Unscaled height of the sprite\n  * If no images or animations are set it's the height of the\n  * placeholder rectangle.\n  *\n  * @property originalHeight\n  * @type {Number}\n  * @default 100\n  */\n  this.originalHeight = this._internalHeight;\n\n  /**\n  * True if the sprite has been removed.\n  *\n  * @property removed\n  * @type {Boolean}\n  */\n  this.removed = false;\n\n  /**\n  * Cycles before self removal.\n  * Set it to initiate a countdown, every draw cycle the property is\n  * reduced by 1 unit. At 0 it will call a sprite.remove()\n  * Disabled if set to -1.\n  *\n  * @property life\n  * @type {Number}\n  * @default -1\n  */\n  this.life = -1;\n\n  /**\n  * If set to true, draws an outline of the collider, the depth, and center.\n  *\n  * @property debug\n  * @type {Boolean}\n  * @default false\n  */\n  this.debug = false;\n\n  /**\n  * If no image or animations are set this is color of the\n  * placeholder rectangle\n  *\n  * @property shapeColor\n  * @type {color}\n  */\n  this.shapeColor = color(random(255), random(255), random(255));\n\n  /**\n  * Groups the sprite belongs to, including allSprites\n  *\n  * @property groups\n  * @type {Array}\n  */\n  this.groups = [];\n\n  var animations = {};\n\n  //The current animation's label.\n  var currentAnimation = '';\n\n  /**\n  * Reference to the current animation.\n  *\n  * @property animation\n  * @type {Animation}\n  */\n  this.animation = undefined;\n\n  /*\n   * @private\n   * Keep animation properties in sync with how the animation changes.\n   */\n  this._syncAnimationSizes = function() {\n    //has an animation but the collider is still default\n    //the animation wasn't loaded. if the animation is not a 1x1 image\n    //it means it just finished loading\n    if(this.colliderType === 'default' &&\n      animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1)\n    {\n      this.collider = this.getBoundingBox();\n      this.colliderType = 'image';\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n    }\n\n    //update size and collider\n    if(animations[currentAnimation].frameChanged || this.width === undefined || this.height === undefined)\n    {\n      //this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n    }\n  };\n\n  /**\n  * Updates the sprite.\n  * Called automatically at the beginning of the draw cycle.\n  *\n  * @method update\n  */\n  this.update = function() {\n\n    if(!this.removed)\n    {\n      //if there has been a change somewhere after the last update\n      //the old position is the last position registered in the update\n      if(this.newPosition !== this.position)\n        this.previousPosition = createVector(this.newPosition.x, this.newPosition.y);\n      else\n        this.previousPosition = createVector(this.position.x, this.position.y);\n\n      this.velocity.x *= 1 - this.friction;\n      this.velocity.y *= 1 - this.friction;\n\n      if(this.maxSpeed !== -1)\n        this.limitSpeed(this.maxSpeed);\n\n      if(this.rotateToDirection && this.velocity.mag() > 0)\n        this._rotation = this.getDirection();\n\n      this.rotation += this.rotationSpeed;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      this.newPosition = createVector(this.position.x, this.position.y);\n\n      this.deltaX = this.position.x - this.previousPosition.x;\n      this.deltaY = this.position.y - this.previousPosition.y;\n\n      //if there is an animation\n      if(animations[currentAnimation])\n      {\n        //update it\n        animations[currentAnimation].update();\n\n        this._syncAnimationSizes();\n      }\n\n      //a collider is created either manually with setCollider or\n      //when I check this sprite for collisions or overlaps\n      if(this.collider)\n      {\n        if(this.collider instanceof AABB)\n        {\n        //scale / rotate collider\n        var t;\n        if (pInst._angleMode === pInst.RADIANS) {\n          t = radians(this.rotation);\n        } else {\n          t = this.rotation;\n        }\n\n        if(this.colliderType === 'custom')\n          {\n          this.collider.extents.x = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(cos(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(sin(t));\n\n          this.collider.extents.y = this.collider.originalExtents.x * abs(this._getScaleX()) * abs(sin(t)) +\n          this.collider.originalExtents.y * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'default')\n          {\n          this.collider.extents.x = this._internalWidth * abs(this._getScaleX()) * abs(cos(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(sin(t));\n          this.collider.extents.y = this._internalWidth * abs(this._getScaleX()) * abs(sin(t)) +\n          this._internalHeight * abs(this._getScaleY()) * abs(cos(t));\n          }\n        else if(this.colliderType === 'image')\n          {\n          this.collider.extents.x = this._internalWidth * abs(cos(t)) +\n          this._internalHeight * abs(sin(t));\n\n          this.collider.extents.y = this._internalWidth * abs(sin(t)) +\n          this._internalHeight * abs(cos(t));\n          }\n        }\n\n        if(this.collider instanceof CircleCollider)\n        {\n        //print(this.scale);\n        this.collider.radius = this.collider.originalRadius * abs(this.scale);\n        }\n\n      }//end collider != null\n\n      //mouse actions\n      if (this.mouseActive)\n      {\n        //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n        this.mouseUpdate();\n      }\n      else\n      {\n        if (typeof(this.onMouseOver) === 'function' ||\n            typeof(this.onMouseOut) === 'function' ||\n            typeof(this.onMousePressed) === 'function' ||\n            typeof(this.onMouseReleased) === 'function')\n        {\n          //if a mouse function is set\n          //it's implied we want to have it mouse active so\n          //we do this automatically\n          this.mouseActive = true;\n\n          //if no collider set it\n          if(!this.collider)\n            this.setDefaultCollider();\n\n          this.mouseUpdate();\n        }\n      }\n\n      //self destruction countdown\n      if (this.life>0)\n        this.life--;\n      if (this.life === 0)\n        this.remove();\n    }\n  };//end update\n\n  /**\n   * Creates a default collider matching the size of the\n   * placeholder rectangle or the bounding box of the image.\n   *\n   * @method setDefaultCollider\n   */\n  this.setDefaultCollider = function() {\n\n    //if has animation get the animation bounding box\n    //working only for preloaded images\n    if(animations[currentAnimation] && (animations[currentAnimation].getWidth() !== 1 && animations[currentAnimation].getHeight() !== 1))\n    {\n      this.collider = this.getBoundingBox();\n      this._internalWidth = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n      this._internalHeight = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n      //quadTree.insert(this);\n      this.colliderType = 'image';\n      //print(\"IMAGE COLLIDER ADDED\");\n    }\n    else if(animations[currentAnimation] && animations[currentAnimation].getWidth() === 1 && animations[currentAnimation].getHeight() === 1)\n    {\n    //animation is still loading\n    //print(\"wait\");\n    }\n    else //get the with and height defined at the creation\n    {\n      this.collider = new AABB(pInst, this.position, createVector(this._internalWidth, this._internalHeight));\n      //quadTree.insert(this);\n      this.colliderType = 'default';\n    }\n\n    pInst.quadTree.insert(this);\n  };\n\n  /**\n   * Updates the sprite mouse states and triggers the mouse events:\n   * onMouseOver, onMouseOut, onMousePressed, onMouseReleased\n   *\n   * @method mouseUpdate\n   */\n  this.mouseUpdate = function() {\n\n    var mouseWasOver = this.mouseIsOver;\n    var mouseWasPressed = this.mouseIsPressed;\n\n    this.mouseIsOver = false;\n    this.mouseIsPressed = false;\n\n    var mousePosition;\n\n    if(camera.active)\n      mousePosition = createVector(camera.mouseX, camera.mouseY);\n    else\n      mousePosition = createVector(pInst.mouseX, pInst.mouseY);\n\n      //rollover\n      if(this.collider)\n      {\n\n        if (this.collider instanceof CircleCollider)\n        {\n          if (dist(mousePosition.x, mousePosition.y, this.collider.center.x, this.collider.center.y) < this.collider.radius)\n            this.mouseIsOver = true;\n        } else if (this.collider instanceof AABB)\n        {\n          if (mousePosition.x > this.collider.left() &&\n              mousePosition.y > this.collider.top() &&\n              mousePosition.x < this.collider.right() &&\n              mousePosition.y < this.collider.bottom())\n          {\n            this.mouseIsOver = true;\n          }\n        }\n\n        //global p5 var\n        if(this.mouseIsOver && pInst.mouseIsPressed)\n          this.mouseIsPressed = true;\n\n        //event change - call functions\n        if(!mouseWasOver && this.mouseIsOver && this.onMouseOver !== undefined)\n          if(typeof(this.onMouseOver) === 'function')\n            this.onMouseOver.call(this, this);\n          else\n            print('Warning: onMouseOver should be a function');\n\n        if(mouseWasOver && !this.mouseIsOver && this.onMouseOut !== undefined)\n          if(typeof(this.onMouseOut) === 'function')\n            this.onMouseOut.call(this, this);\n          else\n            print('Warning: onMouseOut should be a function');\n\n        if(!mouseWasPressed && this.mouseIsPressed && this.onMousePressed !== undefined)\n          if(typeof(this.onMousePressed) === 'function')\n            this.onMousePressed.call(this, this);\n          else\n            print('Warning: onMousePressed should be a function');\n\n        if(mouseWasPressed && !pInst.mouseIsPressed && !this.mouseIsPressed && this.onMouseReleased !== undefined)\n          if(typeof(this.onMouseReleased) === 'function')\n            this.onMouseReleased.call(this, this);\n          else\n            print('Warning: onMouseReleased should be a function');\n\n      }\n\n  };\n\n  /**\n  * Sets a collider for the sprite.\n  *\n  * In p5.play a Collider is an invisible circle or rectangle\n  * that can have any size or position relative to the sprite and which\n  * will be used to detect collisions and overlapping with other sprites,\n  * or the mouse cursor.\n  *\n  * If the sprite is checked for collision, bounce, overlapping or mouse events\n  * a collider is automatically created from the width and height parameter\n  * passed at the creation of the sprite or the from the image dimension in case\n  * of animated sprites.\n  *\n  * Often the image bounding box is not appropriate as the active area for\n  * collision detection so you can set a circular or rectangular sprite with\n  * different dimensions and offset from the sprite's center.\n  *\n  * There are four ways to call this method:\n  *\n  * 1. setCollider(\"rectangle\")\n  * 2. setCollider(\"rectangle\", offsetX, offsetY, width, height)\n  * 3. setCollider(\"circle\")\n  * 4. setCollider(\"circle\", offsetX, offsetY, radius)\n  *\n  * @method setCollider\n  * @param {String} type Either \"rectangle\" or \"circle\"\n  * @param {Number} offsetX Collider x position from the center of the sprite\n  * @param {Number} offsetY Collider y position from the center of the sprite\n  * @param {Number} width Collider width or radius\n  * @param {Number} height Collider height\n  * @throws {TypeError} if given invalid parameters.\n  */\n  this.setCollider = function(type, offsetX, offsetY, width, height) {\n    if (!(type === 'rectangle' || type === 'circle')) {\n      throw new TypeError('setCollider expects the first argument to be either \"circle\" or \"rectangle\"');\n    } else if (type === 'circle' && arguments.length > 1 && arguments.length < 4) {\n      throw new TypeError('Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'circle' && arguments.length > 4) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"circle\") or setCollider(\"circle\", offsetX, offsetY, radius)');\n    } else if (type === 'rectangle' && arguments.length > 1 && arguments.length < 5) {\n      throw new TypeError('Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    } else if (type === 'rectangle' && arguments.length > 5) {\n      pInst._warn('Extra parameters to setCollider were ignored. Usage: setCollider(\"rectangle\") or setCollider(\"rectangle\", offsetX, offsetY, width, height)');\n    }\n\n    this.colliderType = 'custom';\n\n    var v = createVector(offsetX, offsetY);\n    if (type === 'rectangle' && arguments.length === 1) {\n      this.collider = new AABB(pInst, this.position, createVector(this.width, this.height));\n    } else if (type === 'rectangle' && arguments.length >= 5) {\n      this.collider = new AABB(pInst, this.position, createVector(width, height), v);\n    } else if (type === 'circle' && arguments.length === 1) {\n      this.collider = new CircleCollider(pInst, this.position, Math.floor(Math.max(this.width, this.height) / 2));\n    } else if (type === 'circle' && arguments.length >= 4) {\n      this.collider = new CircleCollider(pInst, this.position, width, v);\n    }\n\n    quadTree.insert(this);\n  };\n\n  /**\n   * Returns a the bounding box of the current image\n   * @method getBoundingBox\n   */\n  this.getBoundingBox = function() {\n\n    var w = animations[currentAnimation].getWidth()*abs(this._getScaleX());\n    var h = animations[currentAnimation].getHeight()*abs(this._getScaleY());\n\n    //if the bounding box is 1x1 the image is not loaded\n    //potential issue with actual 1x1 images\n    if(w === 1 && h === 1) {\n      //not loaded yet\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n    else {\n      return new AABB(pInst, this.position, createVector(w, h));\n    }\n  };\n\n  /**\n  * Sets the sprite's horizontal mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped horizontally\n  * If no argument returns the current x mirroring\n  *\n  * @method mirrorX\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorX = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirX = dir;\n    else\n      return dirX;\n  };\n\n  /**\n  * Sets the sprite's vertical mirroring.\n  * If 1 the images displayed normally\n  * If -1 the images are flipped vertically\n  * If no argument returns the current y mirroring\n  *\n  * @method mirrorY\n  * @param {Number} dir Either 1 or -1\n  * @return {Number} Current mirroring if no parameter is specified\n  */\n  this.mirrorY = function(dir) {\n    if(dir === 1 || dir === -1)\n      dirY = dir;\n    else\n      return dirY;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the X direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleX = function()\n  {\n    return this.scale;\n  };\n\n  /*\n   * Returns the value the sprite should be scaled in the Y direction.\n   * Used to calculate rendering and collisions.\n   * @private\n   */\n  this._getScaleY = function()\n  {\n    return this.scale;\n  };\n\n  /**\n   * Manages the positioning, scale and rotation of the sprite\n   * Called automatically, it should not be overridden\n   * @private\n   * @final\n   * @method display\n   */\n  this.display = function()\n  {\n    if (this.visible && !this.removed)\n    {\n      push();\n      colorMode(RGB);\n\n      noStroke();\n      rectMode(CENTER);\n      ellipseMode(CENTER);\n      imageMode(CENTER);\n\n      translate(this.position.x, this.position.y);\n      scale(this._getScaleX()*dirX, this._getScaleY()*dirY);\n      if (pInst._angleMode === pInst.RADIANS) {\n        rotate(radians(this.rotation));\n      } else {\n        rotate(this.rotation);\n      }\n      this.draw();\n      //draw debug info\n      pop();\n\n\n      if(this.debug)\n      {\n        push();\n        //draw the anchor point\n        stroke(0, 255, 0);\n        strokeWeight(1);\n        line(this.position.x-10, this.position.y, this.position.x+10, this.position.y);\n        line(this.position.x, this.position.y-10, this.position.x, this.position.y+10);\n        noFill();\n\n        //depth number\n        noStroke();\n        fill(0, 255, 0);\n        textAlign(LEFT, BOTTOM);\n        textSize(16);\n        text(this.depth+'', this.position.x+4, this.position.y-2);\n\n        noFill();\n        stroke(0, 255, 0);\n\n        //bounding box\n        if(this.collider !== undefined)\n        {\n          this.collider.draw();\n        }\n        pop();\n      }\n\n    }\n  };\n\n\n  /**\n  * Manages the visuals of the sprite.\n  * It can be overridden with a custom drawing function.\n  * The 0,0 point will be the center of the sprite.\n  * Example:\n  * sprite.draw = function() { ellipse(0,0,10,10) }\n  * Will display the sprite as circle.\n  *\n  * @method draw\n  */\n  this.draw = function()\n  {\n    if(currentAnimation !== '' && animations)\n    {\n      if(animations[currentAnimation])\n        animations[currentAnimation].draw(0, 0, 0);\n    }\n    else\n    {\n      noStroke();\n      fill(this.shapeColor);\n      rect(0, 0, this._internalWidth, this._internalHeight);\n    }\n  };\n\n  /**\n   * Removes the Sprite from the sketch.\n   * The removed Sprite won't be drawn or updated anymore.\n   *\n   * @method remove\n   */\n  this.remove = function() {\n    this.removed = true;\n\n    quadTree.removeObject(this);\n\n    //when removed from the \"scene\" also remove all the references in all the groups\n    while (this.groups.length > 0) {\n      this.groups[0].remove(this);\n    }\n  };\n\n  /**\n  * Sets the velocity vector.\n  *\n  * @method setVelocity\n  * @param {Number} x X component\n  * @param {Number} y Y component\n  */\n  this.setVelocity = function(x, y) {\n    this.velocity.x = x;\n    this.velocity.y = y;\n  };\n\n  /**\n  * Calculates the scalar speed.\n  *\n  * @method getSpeed\n  * @return {Number} Scalar speed\n  */\n  this.getSpeed = function() {\n    return this.velocity.mag();\n  };\n\n  /**\n  * Calculates the movement's direction in degrees.\n  *\n  * @method getDirection\n  * @return {Number} Angle in degrees\n  */\n  this.getDirection = function() {\n\n    var direction = atan2(this.velocity.y, this.velocity.x);\n\n    if(isNaN(direction))\n      direction = 0;\n\n    // Unlike Math.atan2, the atan2 method above will return degrees if\n    // the current p5 angleMode is DEGREES, and radians if the p5 angleMode is\n    // RADIANS.  This method should always return degrees (for now).\n    // See https://github.com/molleindustria/p5.play/issues/94\n    if (pInst._angleMode === pInst.RADIANS) {\n      direction = degrees(direction);\n    }\n\n    return direction;\n  };\n\n  /**\n  * Adds the sprite to an existing group\n  *\n  * @method addToGroup\n  * @param {Object} group\n  */\n  this.addToGroup = function(group) {\n    if(group instanceof Array)\n      group.add(this);\n    else\n      print('addToGroup error: '+group+' is not a group');\n  };\n\n  /**\n  * Limits the scalar speed.\n  *\n  * @method limitSpeed\n  * @param {Number} max Max speed: positive number\n  */\n  this.limitSpeed = function(max) {\n\n    //update linear speed\n    var speed = this.getSpeed();\n\n    if(abs(speed)>max)\n    {\n      //find reduction factor\n      var k = max/abs(speed);\n      this.velocity.x *= k;\n      this.velocity.y *= k;\n    }\n  };\n\n  /**\n  * Set the speed and direction of the sprite.\n  * The action overwrites the current velocity.\n  * If direction is not supplied, the current direction is maintained.\n  * If direction is not supplied and there is no current velocity, the current\n  * rotation angle used for the direction.\n  *\n  * @method setSpeed\n  * @param {Number}  speed Scalar speed\n  * @param {Number}  [angle] Direction in degrees\n  */\n  this.setSpeed = function(speed, angle) {\n    var a;\n    if (typeof angle === 'undefined') {\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        a = pInst.atan2(this.velocity.y, this.velocity.x);\n      } else {\n        if (pInst._angleMode === pInst.RADIANS) {\n          a = radians(this._rotation);\n        } else {\n          a = this._rotation;\n        }\n      }\n    } else {\n      if (pInst._angleMode === pInst.RADIANS) {\n        a = radians(angle);\n      } else {\n        a = angle;\n      }\n    }\n    this.velocity.x = cos(a)*speed;\n    this.velocity.y = sin(a)*speed;\n  };\n\n  /**\n  * Pushes the sprite in a direction defined by an angle.\n  * The force is added to the current velocity.\n  *\n  * @method addSpeed\n  * @param {Number}  speed Scalar speed to add\n  * @param {Number}  angle Direction in degrees\n  */\n  this.addSpeed = function(speed, angle) {\n    var a;\n    if (pInst._angleMode === pInst.RADIANS) {\n      a = radians(angle);\n    } else {\n      a = angle;\n    }\n    this.velocity.x += cos(a) * speed;\n    this.velocity.y += sin(a) * speed;\n  };\n\n  /**\n  * Pushes the sprite toward a point.\n  * The force is added to the current velocity.\n  *\n  * @method attractionPoint\n  * @param {Number}  magnitude Scalar speed to add\n  * @param {Number}  pointX Direction x coordinate\n  * @param {Number}  pointY Direction y coordinate\n  */\n  this.attractionPoint = function(magnitude, pointX, pointY) {\n    var angle = atan2(pointY-this.position.y, pointX-this.position.x);\n    this.velocity.x += cos(angle) * magnitude;\n    this.velocity.y += sin(angle) * magnitude;\n  };\n\n\n  /**\n  * Adds an image to the sprite.\n  * An image will be considered a one-frame animation.\n  * The image should be preloaded in the preload() function using p5 loadImage.\n  * Animations require a identifying label (string) to change them.\n  * The image is stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called\n  *\n  * Usages:\n  * - sprite.addImage(label, image);\n  * - sprite.addImage(image);\n  *\n  * If only an image is passed no label is specified\n  *\n  * @method addImage\n  * @param {String|p5.Image} label Label or image\n  * @param {p5.Image} [img] Image\n  */\n  this.addImage = function()\n  {\n    if(typeof arguments[0] === 'string' && arguments[1] instanceof p5.Image)\n      this.addAnimation(arguments[0], arguments[1]);\n    else if(arguments[0] instanceof p5.Image)\n      this.addAnimation('normal', arguments[0]);\n    else\n      throw('addImage error: allowed usages are <image> or <label>, <image>');\n  };\n\n  /**\n  * Adds an animation to the sprite.\n  * The animation should be preloaded in the preload() function\n  * using loadAnimation.\n  * Animations require a identifying label (string) to change them.\n  * Animations are stored in the sprite but not necessarily displayed\n  * until Sprite.changeAnimation(label) is called.\n  *\n  * Usage:\n  * - sprite.addAnimation(label, animation);\n  *\n  * Alternative usages. See Animation for more information on file sequences:\n  * - sprite.addAnimation(label, firstFrame, lastFrame);\n  * - sprite.addAnimation(label, frame1, frame2, frame3...);\n  *\n  * @method addAnimation\n  * @param {String} label Animation identifier\n  * @param {Animation} animation The preloaded animation\n  */\n  this.addAnimation = function(label)\n  {\n    var anim;\n\n    if(typeof label !== 'string')\n    {\n      print('Sprite.addAnimation error: the first argument must be a label (String)');\n      return -1;\n    }\n    else if(arguments.length < 2)\n    {\n      print('addAnimation error: you must specify a label and n frame images');\n      return -1;\n    }\n    else if(arguments[1] instanceof Animation)\n    {\n\n      var sourceAnimation = arguments[1];\n\n      var newAnimation = sourceAnimation.clone();\n\n      animations[label] = newAnimation;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = newAnimation;\n      }\n\n      newAnimation.isSpriteAnimation = true;\n\n      this._internalWidth = newAnimation.getWidth()*abs(this._getScaleX());\n      this._internalHeight = newAnimation.getHeight()*abs(this._getScaleY());\n\n      return newAnimation;\n    }\n    else\n    {\n      var animFrames = [];\n      for(var i=1; i<arguments.length; i++)\n        animFrames.push(arguments[i]);\n\n      anim = construct(pInst.Animation, animFrames);\n      animations[label] = anim;\n\n      if(currentAnimation === '')\n      {\n        currentAnimation = label;\n        this.animation = anim;\n      }\n      anim.isSpriteAnimation = true;\n\n      this._internalWidth = anim.getWidth()*abs(this._getScaleX());\n      this._internalHeight = anim.getHeight()*abs(this._getScaleY());\n\n      return anim;\n    }\n\n  };\n\n  /**\n  * Changes the displayed image/animation.\n  * Equivalent to changeAnimation\n  *\n  * @method changeImage\n  * @param {String} label Image/Animation identifier\n  */\n  this.changeImage = function(label) {\n    this.changeAnimation(label);\n  };\n\n   /**\n  * Returns the label of the current animation\n  *\n  * @method getAnimationLabel\n  * @return {String} label Image/Animation identifier\n  */\n  this.getAnimationLabel = function() {\n    return currentAnimation;\n  };\n\n  /**\n  * Changes the displayed animation.\n  * See Animation for more control over the sequence.\n  *\n  * @method changeAnimation\n  * @param {String} label Animation identifier\n  */\n  this.changeAnimation = function(label) {\n    if(!animations[label])\n      print('changeAnimation error: no animation labeled '+label);\n    else\n    {\n      currentAnimation = label;\n      this.animation = animations[label];\n    }\n  };\n\n  /**\n  * Checks if the given point corresponds to a transparent pixel\n  * in the sprite's current image. It can be used to check a point collision\n  * against only the visible part of the sprite.\n  *\n  * @method overlapPixel\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if non-transparent\n  */\n  this.overlapPixel = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    var img = this.animation.getFrameImage();\n\n    //convert point to img relative position\n    point.x -= this.position.x-img.width/2;\n    point.y -= this.position.y-img.height/2;\n\n    //out of the image entirely\n    if(point.x<0 || point.x>img.width || point.y<0 || point.y>img.height)\n      return false;\n    else if(this.rotation === 0 && this.scale === 1)\n    {\n      //true if full opacity\n      var values = img.get(point.x, point.y);\n      return values[3] === 255;\n    }\n    else\n    {\n      print('Error: overlapPixel doesn\\'t work with scaled or rotated sprites yet');\n      //offscreen printing to be implemented bleurch\n      return false;\n    }\n  };\n\n  /**\n  * Checks if the given point is inside the sprite's collider.\n  *\n  * @method overlapPoint\n  * @param {Number} pointX x coordinate of the point to check\n  * @param {Number} pointY y coordinate of the point to check\n  * @return {Boolean} result True if inside\n  */\n  this.overlapPoint = function(pointX, pointY) {\n    var point = createVector(pointX, pointY);\n\n    if(!this.collider)\n      this.setDefaultCollider();\n\n    if(this.collider !== undefined)\n    {\n      if(this.collider instanceof AABB)\n        return (point.x > this.collider.left() && point.x < this.collider.right() && point.y > this.collider.top() && point.y < this.collider.bottom());\n      if(this.collider instanceof CircleCollider)\n      {\n        var sqRadius = this.collider.radius * this.collider.radius;\n        var sqDist = pow(this.collider.center.x - point.x, 2) + pow(this.collider.center.y - point.y, 2);\n        return sqDist<sqRadius;\n      }\n      else\n        return false;\n    }\n    else\n      return false;\n\n  };\n\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * If the target is a group the function will be called for each single\n  * sprite overlapping. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.overlap = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('overlap', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will be displace by\n  * the colliding one in the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.collide = function(target, callback) {\n    //if(this.collider instanceof AABB && target.collider instanceof AABB)\n    return this.AABBops('collide', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the current sprite will displace\n  * the colliding one to the closest non-overlapping position.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.displace = function(target, callback) {\n    return this.AABBops('displace', target, callback);\n  };\n\n  /**\n  * Checks if the the sprite is overlapping another sprite or a group.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the collision occours.\n  * If the target is a group the function will be called for each single\n  * sprite colliding. The parameter of the function are respectively the\n  * current sprite and the colliding sprite.\n  *\n  * @example\n  *     sprite.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Sprite or group to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  this.bounce = function(target, callback) {\n    return this.AABBops('bounce', target, callback);\n  };\n\n  // Internal collision detection function. Do not use directly.\n  this.AABBops = function(type, target, callback) {\n\n    this.touching.left = false;\n    this.touching.right = false;\n    this.touching.top = false;\n    this.touching.bottom = false;\n\n    var result = false;\n\n    //if single sprite turn into array anyway\n    var others = [];\n\n    if(target instanceof Sprite)\n      others.push(target);\n    else if(target instanceof Array)\n    {\n      if(quadTree !== undefined && quadTree.active)\n        others = quadTree.retrieveFromGroup( this, target);\n\n      if(others.length === 0)\n        others = target;\n\n    }\n    else\n      throw('Error: overlap can only be checked between sprites or groups');\n\n    for(var i=0; i<others.length; i++)\n      if(this !== others[i] && !this.removed) //you can check collisions within the same group but not on itself\n      {\n        var displacement;\n        var other = others[i];\n\n        if(this.collider === undefined)\n          this.setDefaultCollider();\n\n        if(other.collider === undefined)\n          other.setDefaultCollider();\n\n        /*\n        if(this.colliderType==\"default\" && animations[currentAnimation]!=null)\n        {\n          print(\"busted\");\n          return false;\n        }*/\n        if(this.collider !== undefined && other.collider !== undefined)\n        {\n        if(type === 'overlap') {\n            var over;\n\n            //if the other is a circle I calculate the displacement from here\n            if(this.collider instanceof CircleCollider)\n                over = other.collider.overlap(this.collider);\n            else\n                over = this.collider.overlap(other.collider);\n\n            if(over)\n            {\n\n              result = true;\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n            }\n          }\n        else if(type === 'collide' || type === 'displace' || type === 'bounce')\n          {\n            displacement = createVector(0, 0);\n\n            //if the sum of the speed is more than the collider i may\n            //have a tunnelling problem\n            var tunnelX = abs(this.velocity.x-other.velocity.x) >= other.collider.extents.x/2 && round(this.deltaX - this.velocity.x) === 0;\n\n            var tunnelY = abs(this.velocity.y-other.velocity.y) >= other.collider.size().y/2 && round(this.deltaY - this.velocity.y) === 0;\n\n\n            if(tunnelX || tunnelY)\n            {\n              //instead of using the colliders I use the bounding box\n              //around the previous position and current position\n              //this is regardless of the collider type\n\n              //the center is the average of the coll centers\n              var c = createVector(\n                (this.position.x+this.previousPosition.x)/2,\n                (this.position.y+this.previousPosition.y)/2);\n\n              //the extents are the distance between the coll centers\n              //plus the extents of both\n              var e = createVector(\n                abs(this.position.x -this.previousPosition.x) + this.collider.extents.x,\n                abs(this.position.y -this.previousPosition.y) + this.collider.extents.y);\n\n              var bbox = new AABB(pInst, c, e, this.collider.offset);\n\n              //bbox.draw();\n\n              if(bbox.overlap(other.collider))\n              {\n                if(tunnelX) {\n\n                  //entering from the right\n                  if(this.velocity.x < 0)\n                    displacement.x = other.collider.right() - this.collider.left() + 1;\n                  else if(this.velocity.x > 0 )\n                    displacement.x = other.collider.left() - this.collider.right() -1;\n                  }\n\n                if(tunnelY) {\n                  //from top\n                  if(this.velocity.y > 0)\n                    displacement.y = other.collider.top() - this.collider.bottom() - 1;\n                  else if(this.velocity.y < 0 )\n                    displacement.y = other.collider.bottom() - this.collider.top() + 1;\n\n                  }\n\n              }//end overlap\n\n            }\n            else //non tunnel overlap\n            {\n\n              //if the other is a circle I calculate the displacement from here\n              //and reverse it\n              if(this.collider instanceof CircleCollider)\n                {\n                displacement = other.collider.collide(this.collider).mult(-1);\n                }\n              else\n                displacement = this.collider.collide(other.collider);\n\n            }\n\n            if(displacement.x !== 0 || displacement.y !== 0)\n            {\n              var newVelX1, newVelY1, newVelX2, newVelY2;\n\n              if (type === 'displace' && !other.immovable) {\n                other.position.sub(displacement);\n              } else if ((type === 'collide' || type === 'bounce') && !this.immovable) {\n                this.position.add(displacement);\n                this.previousPosition = createVector(this.position.x, this.position.y);\n                this.newPosition = createVector(this.position.x, this.position.y);\n              }\n\n              if(displacement.x > 0)\n                this.touching.left = true;\n              if(displacement.x < 0)\n                this.touching.right = true;\n              if(displacement.y < 0)\n                this.touching.bottom = true;\n              if(displacement.y > 0)\n                this.touching.top = true;\n\n              if(type === 'bounce')\n              {\n                if (this.collider instanceof CircleCollider && other.collider instanceof CircleCollider) {\n                  var dx1 = p5.Vector.sub(this.position, other.position);\n                  var dx2 = p5.Vector.sub(other.position, this.position);\n                  var magnitude = dx1.magSq();\n                  var totalMass = this.mass + other.mass;\n                  var m1 = 0, m2 = 0;\n                  if (this.immovable) {\n                    m2 = 2;\n                  } else if (other.immovable) {\n                    m1 = 2;\n                  } else {\n                    m1 = 2 * other.mass / totalMass;\n                    m2 = 2 * this.mass / totalMass;\n                  }\n                  var newVel1 = dx1.mult(m1 * p5.Vector.sub(this.velocity, other.velocity).dot(dx1) / magnitude);\n                  var newVel2 = dx2.mult(m2 * p5.Vector.sub(other.velocity, this.velocity).dot(dx2) / magnitude);\n\n                  this.velocity.sub(newVel1.mult(this.restitution));\n                  other.velocity.sub(newVel2.mult(other.restitution));\n                }\n                else {\n                if(other.immovable)\n                {\n                  newVelX1 = -this.velocity.x+other.velocity.x;\n                  newVelY1 = -this.velocity.y+other.velocity.y;\n                }\n                else\n                {\n                  newVelX1 = (this.velocity.x * (this.mass - other.mass) + (2 * other.mass * other.velocity.x)) / (this.mass + other.mass);\n                  newVelY1 = (this.velocity.y * (this.mass - other.mass) + (2 * other.mass * other.velocity.y)) / (this.mass + other.mass);\n                  newVelX2 = (other.velocity.x * (other.mass - this.mass) + (2 * this.mass * this.velocity.x)) / (this.mass + other.mass);\n                  newVelY2 = (other.velocity.y * (other.mass - this.mass) + (2 * this.mass * this.velocity.y)) / (this.mass + other.mass);\n                }\n\n                //var bothCircles = (this.collider instanceof CircleCollider &&\n                //                   other.collider  instanceof CircleCollider);\n\n                //if(this.touching.left || this.touching.right || this.collider instanceof CircleCollider)\n\n                //print(displacement);\n\n                if(abs(displacement.x)>abs(displacement.y))\n                {\n\n\n                  if(!this.immovable)\n                  {\n                    this.velocity.x = newVelX1*this.restitution;\n\n                  }\n\n                  if(!other.immovable)\n                    other.velocity.x = newVelX2*other.restitution;\n\n                }\n                //if(this.touching.top || this.touching.bottom || this.collider instanceof CircleCollider)\n                if(abs(displacement.x)<abs(displacement.y))\n                {\n\n                  if(!this.immovable)\n                    this.velocity.y = newVelY1*this.restitution;\n\n                  if(!other.immovable)\n                    other.velocity.y = newVelY2*other.restitution;\n                }\n                }\n              }\n              //else if(type == \"collide\")\n                //this.velocity = createVector(0,0);\n\n              if(callback !== undefined && typeof callback === 'function')\n                callback.call(this, this, other);\n\n              result = true;\n            }\n          }\n        }//end collider exists\n      }\n\n    return result;\n  };\n} //end Sprite class\n\ndefineLazyP5Property('Sprite', boundConstructorFactory(Sprite));\n\n/**\n   * A camera facilitates scrolling and zooming for scenes extending beyond\n   * the canvas. A camera has a position, a zoom factor, and the mouse\n   * coordinates relative to the view.\n   * The camera is automatically created on the first draw cycle.\n   *\n   * In p5.js terms the camera wraps the whole drawing cycle in a\n   * transformation matrix but it can be disable anytime during the draw\n   * cycle for example to draw interface elements in an absolute position.\n   *\n   * @class Camera\n   * @constructor\n   * @param {Number} x Initial x coordinate\n   * @param {Number} y Initial y coordinate\n   * @param {Number} zoom magnification\n   **/\nfunction Camera(pInst, x, y, zoom) {\n  /**\n  * Camera position. Defines the global offset of the sketch.\n  *\n  * @property position\n  * @type {p5.Vector}\n  */\n  this.position = pInst.createVector(x, y);\n\n  /**\n  * Camera zoom. Defines the global scale of the sketch.\n  * A scale of 1 will be the normal size. Setting it to 2 will make everything\n  * twice the size. .5 will make everything half size.\n  *\n  * @property zoom\n  * @type {Number}\n  */\n  this.zoom = zoom;\n\n  /**\n  * MouseX translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseX\n  * @type {Number}\n  */\n  this.mouseX = pInst.mouseX;\n\n  /**\n  * MouseY translated to the camera view.\n  * Offsetting and scaling the canvas will not change the sprites' position\n  * nor the mouseX and mouseY variables. Use this property to read the mouse\n  * position if the camera moved or zoomed.\n  *\n  * @property mouseY\n  * @type {Number}\n  */\n  this.mouseY = pInst.mouseY;\n\n  /**\n  * True if the camera is active.\n  * Read only property. Use the methods Camera.on() and Camera.off()\n  * to enable or disable the camera.\n  *\n  * @property active\n  * @type {Boolean}\n  */\n  this.active = false;\n\n  /**\n  * Activates the camera.\n  * The canvas will be drawn according to the camera position and scale until\n  * Camera.off() is called\n  *\n  * @method on\n  */\n  this.on = function() {\n    if(!this.active)\n    {\n      cameraPush.call(pInst);\n      this.active = true;\n    }\n  };\n\n  /**\n  * Deactivates the camera.\n  * The canvas will be drawn normally, ignoring the camera's position\n  * and scale until Camera.on() is called\n  *\n  * @method off\n  */\n  this.off = function() {\n    if(this.active)\n    {\n      cameraPop.call(pInst);\n      this.active = false;\n    }\n  };\n} //end camera class\n\ndefineLazyP5Property('Camera', boundConstructorFactory(Camera));\n\n//called pre draw by default\nfunction cameraPush() {\n  var pInst = this;\n  var camera = pInst.camera;\n\n  //awkward but necessary in order to have the camera at the center\n  //of the canvas by default\n  if(!camera.init && camera.position.x === 0 && camera.position.y === 0)\n    {\n    camera.position.x=pInst.width/2;\n    camera.position.y=pInst.height/2;\n    camera.init = true;\n    }\n\n  camera.mouseX = pInst.mouseX+camera.position.x-pInst.width/2;\n  camera.mouseY = pInst.mouseY+camera.position.y-pInst.height/2;\n\n  if(!camera.active)\n  {\n    camera.active = true;\n    pInst.push();\n    pInst.scale(camera.zoom);\n    pInst.translate(-camera.position.x+pInst.width/2/camera.zoom, -camera.position.y+pInst.height/2/camera.zoom);\n  }\n}\n\n//called postdraw by default\nfunction cameraPop() {\n  var pInst = this;\n\n  if(pInst.camera.active)\n  {\n    pInst.pop();\n    pInst.camera.active = false;\n  }\n}\n\n\n\n\n/**\n   * In p5.play groups are collections of sprites with similar behavior.\n   * For example a group may contain all the sprites in the background\n   * or all the sprites that \"kill\" the player.\n   *\n   * Groups are \"extended\" arrays and inherit all their properties\n   * e.g. group.length\n   *\n   * Since groups contain only references, a sprite can be in multiple\n   * groups and deleting a group doesn't affect the sprites themselves.\n   *\n   * Sprite.remove() will also remove the sprite from all the groups\n   * it belongs to.\n   *\n   * @class Group\n   * @constructor\n   */\nfunction Group() {\n\n  //basically extending the array\n  var array = [];\n\n  /**\n  * Gets the member at index i.\n  *\n  * @method get\n  * @param {Number} i The index of the object to retrieve\n  */\n  array.get = function(i) {\n    return array[i];\n  };\n\n  /**\n  * Checks if the group contains a sprite.\n  *\n  * @method contains\n  * @param {Sprite} sprite The sprite to search\n  * @return {Number} Index or -1 if not found\n  */\n  array.contains = function(sprite) {\n    return this.indexOf(sprite)>-1;\n  };\n\n  /**\n   * Same as Group.contains\n   * @method indexOf\n   */\n  array.indexOf = function(item) {\n    for (var i = 0, len = array.length; i < len; ++i) {\n      if (virtEquals(item, array[i])) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n  * Adds a sprite to the group.\n  *\n  * @method add\n  * @param {Sprite} s The sprite to be added\n  */\n  array.add = function(s) {\n    if(!(s instanceof Sprite)) {\n      throw('Error: you can only add sprites to a group');\n    }\n\n    if (-1 === this.indexOf(s)) {\n      array.push(s);\n      s.groups.push(this);\n    }\n  };\n\n  /**\n   * Same as group.length\n   * @method size\n   */\n  array.size = function() {\n    return array.length;\n  };\n\n  /**\n  * Removes all the sprites in the group\n  * from the scene.\n  *\n  * @method removeSprites\n  */\n  array.removeSprites = function() {\n    while (array.length > 0) {\n      array[0].remove();\n    }\n  };\n\n  /**\n  * Removes all references to the group.\n  * Does not remove the actual sprites.\n  *\n  * @method clear\n  */\n  array.clear = function() {\n    array.length = 0;\n  };\n\n  /**\n  * Removes a sprite from the group.\n  * Does not remove the actual sprite, only the affiliation (reference).\n  *\n  * @method remove\n  * @param {Sprite} item The sprite to be removed\n  * @return {Boolean} True if sprite was found and removed\n  */\n  array.remove = function(item) {\n    if(!(item instanceof Sprite)) {\n      throw('Error: you can only remove sprites from a group');\n    }\n\n    var i, removed = false;\n    for (i = array.length - 1; i >= 0; i--) {\n      if (array[i] === item) {\n        array.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      for (i = item.groups.length - 1; i >= 0; i--) {\n        if (item.groups[i] === this) {\n          item.groups.splice(i, 1);\n        }\n      }\n    }\n\n    return removed;\n  };\n\n  /**\n   * Returns a copy of the group as standard array.\n   * @method toArray\n   */\n  array.toArray = function() {\n    return array.slice(0);\n  };\n\n  /**\n  * Returns the highest depth in a group\n  *\n  * @method maxDepth\n  * @return {Number} The depth of the sprite drawn on the top\n  */\n  array.maxDepth = function() {\n    if (array.length === 0) {\n      return 0;\n    }\n\n    return array.reduce(function(maxDepth, sprite) {\n      return Math.max(maxDepth, sprite.depth);\n    }, -Infinity);\n  };\n\n  /**\n  * Returns the lowest depth in a group\n  *\n  * @method minDepth\n  * @return {Number} The depth of the sprite drawn on the bottom\n  */\n  array.minDepth = function() {\n    if (array.length === 0) {\n      return 99999;\n    }\n\n    return array.reduce(function(minDepth, sprite) {\n      return Math.min(minDepth, sprite.depth);\n    }, Infinity);\n  };\n\n  /**\n  * Draws all the sprites in the group.\n  *\n  * @method draw\n  */\n  array.draw = function() {\n\n    //sort by depth\n    this.sort(function(a, b) {\n      return a.depth - b.depth;\n    });\n\n    for(var i = 0; i<this.size(); i++)\n    {\n      this.get(i).display();\n    }\n  };\n\n  //internal use\n  function virtEquals(obj, other) {\n    if (obj === null || other === null) {\n      return (obj === null) && (other === null);\n    }\n    if (typeof (obj) === 'string') {\n      return obj === other;\n    }\n    if (typeof(obj) !== 'object') {\n      return obj === other;\n    }\n    if (obj.equals instanceof Function) {\n      return obj.equals(other);\n    }\n    return obj === other;\n  }\n\n  /**\n   * Collide each member of group against the target using the given collision\n   * type.  Return true if any collision occurred.\n   * Internal use\n   *\n   * @private\n   * @method _groupCollide\n   * @param {!string} type one of 'overlap', 'collide', 'displace', 'bounce'\n   * @param {Object} target Group or Sprite\n   * @param {Function} [callback] on collision.\n   * @return {boolean} True if any collision/overlap occurred\n   */\n  function _groupCollide(type, target, callback) {\n    var didCollide = false;\n    for(var i = 0; i<this.size(); i++)\n      didCollide = this.get(i).AABBops(type, target, callback) || didCollide;\n    return didCollide;\n  }\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.overlap(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method overlap\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.overlap = _groupCollide.bind(array, 'overlap');\n\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will be displaced\n  * by the colliding one to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.collide(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method collide\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.collide = _groupCollide.bind(array, 'collide');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites in the group will displace\n  * the colliding ones to the closest non-overlapping positions.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occurs.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.displace(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method displace\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.displace = _groupCollide.bind(array, 'displace');\n\n  /**\n  * Checks if the the group is overlapping another group or sprite.\n  * If the overlap is positive the sprites will bounce affecting each\n  * other's trajectories depending on their .velocity, .mass and .restitution.\n  *\n  * The check is performed using the colliders. If colliders are not set\n  * they will be created automatically from the image/animation bounding box.\n  *\n  * A callback function can be specified to perform additional operations\n  * when the overlap occours.\n  * The function will be called for each single sprite overlapping.\n  * The parameter of the function are respectively the\n  * member of the current group and the other sprite passed as parameter.\n  *\n  * @example\n  *     group.bounce(otherSprite, explosion);\n  *\n  *     function explosion(spriteA, spriteB) {\n  *       spriteA.remove();\n  *       spriteB.score++;\n  *     }\n  *\n  * @method bounce\n  * @param {Object} target Group or Sprite to check against the current one\n  * @param {Function} [callback] The function to be called if overlap is positive\n  * @return {Boolean} True if overlapping\n  */\n  array.bounce = _groupCollide.bind(array, 'bounce');\n\n  return array;\n}\n\np5.prototype.Group = Group;\n\n//circle collider - used internally\nfunction CircleCollider(pInst, _center, _radius, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n\n  this.center = _center;\n  this.radius = _radius;\n  this.originalRadius = _radius;\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n  this.extents = createVector(_radius*2, _radius*2);\n\n  this.draw = function()\n  {\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.ellipse(this.center.x+this.offset.x, this.center.y+this.offset.y, this.radius*2, this.radius*2);\n  };\n\n  //should be called only for circle vs circle\n  this.overlap = function(other)\n  {\n    //square dist\n    var r = this.radius + other.radius;\n    r *= r;\n    var thisCenterX = this.center.x + this.offset.x;\n    var thisCenterY = this.center.y + this.offset.y;\n    var otherCenterX = other.center.x + other.offset.x;\n    var otherCenterY = other.center.y + other.offset.y;\n    var sqDist = pow(thisCenterX - otherCenterX, 2) + pow(thisCenterY - otherCenterY, 2);\n    return r > sqDist;\n  };\n\n  //should be called only for circle vs circle\n  this.collide = function(other)\n  {\n    if(this.overlap(other)) {\n      var thisCenterX = this.center.x + this.offset.x;\n      var thisCenterY = this.center.y + this.offset.y;\n      var otherCenterX = other.center.x + other.offset.x;\n      var otherCenterY = other.center.y + other.offset.y;\n      var a = pInst.atan2(thisCenterY-otherCenterY, thisCenterX-otherCenterX);\n      var radii = this.radius+other.radius;\n      var intersection = abs(radii - dist(thisCenterX, thisCenterY, otherCenterX, otherCenterY));\n\n      var displacement = createVector(pInst.cos(a)*intersection, pInst.sin(a)*intersection);\n\n      return displacement;\n    } else {\n      return createVector(0, 0);\n    }\n  };\n\n  this.size = function()\n  {\n    return createVector(this.radius*2, this.radius*2);\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.radius;\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.radius;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.radius;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.radius;\n  };\n\n\n\n}\ndefineLazyP5Property('CircleCollider', boundConstructorFactory(CircleCollider));\n\n//axis aligned bounding box - extents are the half sizes - used internally\nfunction AABB(pInst, _center, _extents, _offset) {\n  var pInstBind = createPInstBinder(pInst);\n\n  var createVector = pInstBind('createVector');\n\n  var CENTER = p5.prototype.CENTER;\n  var PI = p5.prototype.PI;\n\n  this.center = _center;\n  this.extents = _extents;\n  this.originalExtents = _extents.copy();\n\n  if(_offset === undefined)\n    this.offset = createVector(0, 0);\n  else\n    this.offset = _offset;\n\n  this.min = function()\n  {\n    return createVector(this.center.x+this.offset.x - this.extents.x, this.center.y+this.offset.y - this.extents.y);\n  };\n\n  this.max = function()\n  {\n    return createVector(this.center.x+this.offset.x + this.extents.x, this.center.y+this.offset.y + this.extents.y);\n  };\n\n  this.right = function()\n  {\n    return this.center.x+this.offset.x + this.extents.x/2;\n  };\n\n  this.left = function()\n  {\n    return this.center.x+this.offset.x - this.extents.x/2;\n  };\n\n  this.top = function()\n  {\n    return this.center.y+this.offset.y - this.extents.y/2;\n  };\n\n  this.bottom = function()\n  {\n    return this.center.y+this.offset.y + this.extents.y/2;\n  };\n\n  this.size = function()\n  {\n    return createVector(this.extents.x * 2, this.extents.y * 2);\n  };\n\n  this.rotate = function(r)\n  {\n    //rotate the bbox\n    var t;\n    if (pInst._angleMode === pInst.RADIANS) {\n      t = radians(r);\n    } else {\n      t = r;\n    }\n\n    var w2 = this.extents.x * abs(pInst.cos(t)) + this.extents.y * abs(pInst.sin(t));\n    var h2 = this.extents.x * abs(pInst.sin(t)) + this.extents.y * abs(pInst.cos(t));\n\n    this.extents.x = w2;\n    this.extents.y = h2;\n\n  };\n\n  this.draw = function()\n  {\n    //fill(col);\n    pInst.noFill();\n    pInst.stroke(0, 255, 0);\n    pInst.rectMode(CENTER);\n    pInst.rect(this.center.x+this.offset.x, this.center.y+this.offset.y, this.size().x/2, this.size().y/2);\n  };\n\n  this.overlap = function(other)\n  {\n    //box vs box\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        return true;\n      }\n      else\n        return false;\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n      var distance = pt.dist(other.center);\n\n      return distance<other.radius;\n    }\n  };\n\n  this.collide = function(other)\n  {\n\n    if(other instanceof AABB)\n    {\n      var md = other.minkowskiDifference(this);\n\n      if (md.min().x <= 0 &&\n          md.max().x >= 0 &&\n          md.min().y <= 0 &&\n          md.max().y >= 0)\n      {\n        var boundsPoint = md.closestPointOnBoundsToPoint(createVector(0, 0));\n\n        return boundsPoint;\n      }\n      else\n        return createVector(0, 0);\n    }\n    //box vs circle\n    else if(other instanceof CircleCollider)\n    {\n\n      //find closest point to the circle on the box\n      var pt = createVector(other.center.x, other.center.y);\n\n      //I don't know what's going o try to trace a line from centers to see\n      if( other.center.x < this.left() )\n        pt.x = this.left();\n      else if( other.center.x > this.right())\n        pt.x = this.right();\n\n      if( other.center.y < this.top() )\n        pt.y = this.top();\n      else if( other.center.y > this.bottom())\n        pt.y = this.bottom();\n\n\n      var distance = pt.dist(other.center);\n      var a;\n\n      if(distance<other.radius)\n      {\n        //reclamp point\n        if(pt.x === other.center.x && pt.y === other.center.y)\n        {\n          var xOverlap = pt.x - this.center.x;\n          var yOverlap = pt.y - this.center.y;\n\n\n          if(abs(xOverlap) < abs(yOverlap))\n          {\n            if(xOverlap > 0 )\n              pt.x = this.right();\n            else\n              pt.x = this.left();\n          }\n          else\n          {\n            if(yOverlap < 0 )\n              pt.y = this.top();\n            else\n              pt.y = this.bottom();\n          }\n\n          a = pInst.atan2(other.center.y-pt.y, other.center.x-pt.x);\n\n          //fix exceptions\n          if(a === 0)\n          {\n            if(pt.x === this.right()) a = PI;\n            if(pt.y === this.top()) a = PI/2;\n            if(pt.y === this.bottom()) a = -PI/2;\n          }\n        }\n        else\n        {\n          //angle bw point and center\n          a = pInst.atan2(pt.y-other.center.y, pt.x-other.center.x);\n          //project the normal (line between pt and center) onto the circle\n        }\n\n        var d = createVector(pt.x-other.center.x, pt.y-other.center.y);\n        var displacement = createVector(pInst.cos(a)*other.radius-d.x, pInst.sin(a)*other.radius-d.y);\n\n        //if(pt.x === other.center.x && pt.y === other.center.y)\n        //displacement = displacement.mult(-1);\n\n        return displacement;\n        //return createVector(0,0);\n      }\n      else\n        return createVector(0, 0);\n    }\n  };\n\n  this.minkowskiDifference = function(other)\n  {\n    var topLeft = this.min().sub(other.max());\n    var fullSize = this.size().add(other.size());\n    return new AABB(pInst, topLeft.add(fullSize.div(2)), fullSize.div(2));\n  };\n\n\n  this.closestPointOnBoundsToPoint = function(point)\n  {\n    // test x first\n    var minDist = abs(point.x - this.min().x);\n    var boundsPoint = createVector(this.min().x, point.y);\n\n    if (abs(this.max().x - point.x) < minDist)\n    {\n      minDist = abs(this.max().x - point.x);\n      boundsPoint = createVector(this.max().x, point.y);\n    }\n\n    if (abs(this.max().y - point.y) < minDist)\n    {\n      minDist = abs(this.max().y - point.y);\n      boundsPoint = createVector(point.x, this.max().y);\n    }\n\n    if (abs(this.min().y - point.y) < minDist)\n    {\n      minDist = abs(this.min.y - point.y);\n      boundsPoint = createVector(point.x, this.min().y);\n    }\n\n    return boundsPoint;\n  };\n\n\n}//end AABB\ndefineLazyP5Property('AABB', boundConstructorFactory(AABB));\n\n\n\n/**\n * An Animation object contains a series of images (p5.Image) that\n * can be displayed sequentially.\n *\n * All files must be png images. You must include the directory from the sketch root,\n * and the extension .png\n *\n * A sprite can have multiple labeled animations, see Sprite.addAnimation\n * and Sprite.changeAnimation, however an animation can be used independently.\n *\n * An animation can be created either by passing a series of file names,\n * no matter how many or by passing the first and the last file name\n * of a numbered sequence.\n * p5.play will try to detect the sequence pattern.\n *\n * For example if the given filenames are\n * \"data/file0001.png\" and \"data/file0005.png\" the images\n * \"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.\n *\n * @example\n *     var sequenceAnimation;\n *     var glitch;\n *\n *     function preload() {\n *       sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n *       glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n *     }\n *\n *     function setup() {\n *       createCanvas(800, 600);\n *     }\n *\n *     function draw() {\n *       background(0);\n *       animation(sequenceAnimation, 100, 100);\n *       animation(glitch, 200, 100);\n *     }\n *\n * @class Animation\n * @constructor\n * @param {String} fileName1 First file in a sequence OR first image file\n * @param {String} fileName2 Last file in a sequence OR second image file\n * @param {String} [...fileNameN] Any number of image files after the first two\n */\nfunction Animation(pInst) {\n  var frameArguments = Array.prototype.slice.call(arguments, 1);\n  var i;\n\n  var CENTER = p5.prototype.CENTER;\n\n  /**\n  * Array of frames (p5.Image)\n  *\n  * @property images\n  * @type {Array}\n  */\n  this.images = [];\n\n  var frame = 0;\n  var cycles = 0;\n  var targetFrame = -1;\n\n  this.offX = 0;\n  this.offY = 0;\n\n  /**\n  * Delay between frames in number of draw cycles.\n  * If set to 4 the framerate of the animation would be the\n  * sketch framerate divided by 4 (60fps = 15fps)\n  *\n  * @property frameDelay\n  * @type {Number}\n  * @default 4\n  */\n  this.frameDelay = 4;\n\n  /**\n  * True if the animation is currently playing.\n  *\n  * @property playing\n  * @type {Boolean}\n  * @default true\n  */\n  this.playing = true;\n\n  /**\n  * Animation visibility.\n  *\n  * @property visible\n  * @type {Boolean}\n  * @default true\n  */\n  this.visible = true;\n\n  /**\n  * If set to false the animation will stop after reaching the last frame\n  *\n  * @property looping\n  * @type {Boolean}\n  * @default true\n  */\n  this.looping = true;\n\n  /**\n  * True if frame changed during the last draw cycle\n  *\n  * @property frameChanged\n  * @type {Boolean}\n  */\n  this.frameChanged = false;\n\n  //is the collider defined manually or defined\n  //by the current frame size\n  this.imageCollider = false;\n\n\n  //sequence mode\n  if(frameArguments.length === 2 && typeof frameArguments[0] === 'string' && typeof frameArguments[1] === 'string')\n  {\n    var from = frameArguments[0];\n    var to = frameArguments[1];\n\n    //print(\"sequence mode \"+from+\" -> \"+to);\n\n    //make sure the extensions are fine\n    var ext1 = from.substring(from.length-4, from.length);\n    if(ext1 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+from+')');\n      from = -1;\n    }\n\n    var ext2 = to.substring(to.length-4, to.length);\n    if(ext2 !== '.png')\n    {\n      pInst.print('Animation error: you need to use .png files (filename '+to+')');\n      to = -1;\n    }\n\n    //extensions are fine\n    if(from !== -1 && to !== -1)\n    {\n      var digits1 = 0;\n      var digits2 = 0;\n\n      //skip extension work backwards to find the numbers\n      for (i = from.length-5; i >= 0; i--) {\n        if(from.charAt(i) >= '0' && from.charAt(i) <= '9')\n          digits1++;\n      }\n\n      for (i = to.length-5; i >= 0; i--) {\n        if(to.charAt(i) >= '0' && to.charAt(i) <= '9')\n          digits2++;\n      }\n\n      var prefix1 = from.substring(0, from.length-(4+digits1));\n      var prefix2 = to.substring(0, to.length-(4+digits2) );\n\n      // Our numbers likely have leading zeroes, which means that some\n      // browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n      // instead of decimal. To fix this, we'll explicity tell parseInt to\n      // use a base of 10 (decimal). For more details on this issue, see\n      // http://stackoverflow.com/a/8763427/2422398.\n      var number1 = parseInt(from.substring(from.length-(4+digits1), from.length-4), 10);\n      var number2 = parseInt(to.substring(to.length-(4+digits2), to.length-4), 10);\n\n      //swap if inverted\n      if(number2<number1)\n      {\n        var t = number2;\n        number2 = number1;\n        number1 = t;\n      }\n\n      //two different frames\n      if(prefix1 !== prefix2 )\n      {\n        //print(\"2 separate images\");\n        this.images.push(pInst.loadImage(from));\n        this.images.push(pInst.loadImage(to));\n      }\n      //same digits: case img0001, img0002\n      else\n      {\n        var fileName;\n        if(digits1 === digits2)\n        {\n\n          //load all images\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + pInst.nf(i, digits1) + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n        else //case: case img1, img2\n        {\n          //print(\"from \"+prefix1+\" \"+number1 +\" to \"+number2);\n          for (i = number1; i <= number2; i++) {\n            // Use nf() to number format 'i' into four digits\n            fileName = prefix1 + i + '.png';\n            this.images.push(pInst.loadImage(fileName));\n\n          }\n\n        }\n      }\n\n    }//end no ext error\n\n  }//end sequence mode\n  // Sprite sheet mode\n  else if (frameArguments.length === 1 && (frameArguments[0] instanceof SpriteSheet))\n  {\n    this.spriteSheet = frameArguments[0];\n    this.images = this.spriteSheet.frames;\n  }\n  else if(frameArguments.length !== 0)//arbitrary list of images\n  {\n    //print(\"Animation arbitrary mode\");\n    for (i = 0; i < frameArguments.length; i++) {\n      //print(\"loading \"+fileNames[i]);\n      if(frameArguments[i] instanceof p5.Image)\n        this.images.push(frameArguments[i]);\n      else\n        this.images.push(pInst.loadImage(frameArguments[i]));\n    }\n  }\n\n  /**\n  * Objects are passed by reference so to have different sprites\n  * using the same animation you need to clone it.\n  *\n  * @method clone\n  * @return {Animation} A clone of the current animation\n  */\n  this.clone = function() {\n    var myClone = new Animation(pInst); //empty\n    myClone.images = [];\n\n    if (this.spriteSheet) {\n      myClone.spriteSheet = this.spriteSheet.clone();\n    }\n    myClone.images = this.images.slice();\n\n    myClone.offX = this.offX;\n    myClone.offY = this.offY;\n    myClone.frameDelay = this.frameDelay;\n    myClone.playing = this.playing;\n    myClone.looping = this.looping;\n\n    return myClone;\n  };\n\n  /**\n   * Draws the animation at coordinate x and y.\n   * Updates the frames automatically.\n   *\n   * @method draw\n   * @param {Number} x x coordinate\n   * @param {Number} y y coordinate\n   * @param {Number} [r=0] rotation\n   */\n  this.draw = function(x, y, r) {\n    this.xpos = x;\n    this.ypos = y;\n    this.rotation = r || 0;\n\n    if (this.visible)\n    {\n\n      //only connection with the sprite class\n      //if animation is used independently draw and update are the sam\n      if(!this.isSpriteAnimation)\n        this.update();\n\n      //this.currentImageMode = g.imageMode;\n      pInst.push();\n      pInst.imageMode(CENTER);\n\n      pInst.translate(this.xpos, this.ypos);\n      if (pInst._angleMode === pInst.RADIANS) {\n        pInst.rotate(radians(this.rotation));\n      } else {\n        pInst.rotate(this.rotation);\n      }\n\n      if(this.images[frame] !== undefined)\n      {\n        if (this.spriteSheet) {\n          var frame_info = this.images[frame].frame;\n          pInst.image(this.spriteSheet.image, frame_info.x, frame_info.y, frame_info.width,\n            frame_info.height, this.offX, this.offY, frame_info.width, frame_info.height);\n        } else {\n          pInst.image(this.images[frame], this.offX, this.offY);\n        }\n      }\n      else\n      {\n        pInst.print('Warning undefined frame '+frame);\n        //this.isActive = false;\n      }\n\n      pInst.pop();\n    }\n  };\n\n  //called by draw\n  this.update = function() {\n    cycles++;\n    var previousFrame = frame;\n    this.frameChanged = false;\n\n\n    //go to frame\n    if(this.images.length === 1)\n    {\n      this.playing = false;\n      frame = 0;\n    }\n\n    if ( this.playing && cycles%this.frameDelay === 0)\n    {\n      //going to target frame up\n      if(targetFrame>frame && targetFrame !== -1)\n      {\n        frame++;\n      }\n      //going to taget frame down\n      else if(targetFrame<frame && targetFrame !== -1)\n      {\n        frame--;\n      }\n      else if(targetFrame === frame && targetFrame !== -1)\n      {\n        this.playing=false;\n      }\n      else if (this.looping) //advance frame\n      {\n        //if next frame is too high\n        if (frame>=this.images.length-1)\n          frame = 0;\n        else\n          frame++;\n      } else\n      {\n        //if next frame is too high\n        if (frame<this.images.length-1)\n          frame++;\n      }\n    }\n\n    if(previousFrame !== frame)\n      this.frameChanged = true;\n\n  };//end update\n\n  /**\n  * Plays the animation.\n  *\n  * @method play\n  */\n  this.play = function() {\n    this.playing = true;\n    targetFrame = -1;\n  };\n\n  /**\n  * Stops the animation.\n  *\n  * @method stop\n  */\n  this.stop = function(){\n    this.playing = false;\n  };\n\n  /**\n  * Rewinds the animation to the first frame.\n  *\n  * @method rewind\n  */\n  this.rewind = function() {\n    frame = 0;\n  };\n\n  /**\n  * Changes the current frame.\n  *\n  * @method changeFrame\n  * @param {Number} frame Frame number (starts from 0).\n  */\n  this.changeFrame = function(f) {\n    if (f<this.images.length)\n      frame = f;\n    else\n      frame = this.images.length - 1;\n\n    targetFrame = -1;\n    //this.playing = false;\n  };\n\n   /**\n  * Goes to the next frame and stops.\n  *\n  * @method nextFrame\n  */\n  this.nextFrame = function() {\n\n    if (frame<this.images.length-1)\n      frame = frame+1;\n    else if(this.looping)\n      frame = 0;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n   /**\n  * Goes to the previous frame and stops.\n  *\n  * @method previousFrame\n  */\n  this.previousFrame = function() {\n\n    if (frame>0)\n      frame = frame-1;\n    else if(this.looping)\n      frame = this.images.length-1;\n\n    targetFrame = -1;\n    this.playing = false;\n  };\n\n  /**\n  * Plays the animation forward or backward toward a target frame.\n  *\n  * @method goToFrame\n  * @param {Number} toFrame Frame number destination (starts from 0)\n  */\n  this.goToFrame = function(toFrame) {\n    if(toFrame < 0 || toFrame >= this.images.length) {\n      return;\n    }\n\n    // targetFrame gets used by the update() method to decide what frame to\n    // select next.  When it's not being used it gets set to -1.\n    targetFrame = toFrame;\n\n    if(targetFrame !== frame) {\n      this.playing = true;\n    }\n  };\n\n  /**\n  * Returns the current frame number.\n  *\n  * @method getFrame\n  * @return {Number} Current frame (starts from 0)\n  */\n  this.getFrame = function() {\n    return frame;\n  };\n\n  /**\n  * Returns the last frame number.\n  *\n  * @method getLastFrame\n  * @return {Number} Last frame number (starts from 0)\n  */\n  this.getLastFrame = function() {\n    return this.images.length-1;\n  };\n\n  /**\n  * Returns the current frame image as p5.Image.\n  *\n  * @method getFrameImage\n  * @return {p5.Image} Current frame image\n  */\n  this.getFrameImage = function() {\n    return this.images[frame];\n  };\n\n  /**\n  * Returns the frame image at the specified frame number.\n  *\n  * @method getImageAt\n  * @param {Number} frame Frame number\n  * @return {p5.Image} Frame image\n  */\n  this.getImageAt = function(f) {\n    return this.images[f];\n  };\n\n  /**\n  * Returns the current frame width in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getWidth\n  * @return {Number} Frame width\n  */\n  this.getWidth = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].width;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.width;\n    } else {\n      return 1;\n    }\n  };\n\n  /**\n  * Returns the current frame height in pixels.\n  * If there is no image loaded, returns 1.\n  *\n  * @method getHeight\n  * @return {Number} Frame height\n  */\n  this.getHeight = function() {\n    if (this.images[frame] instanceof p5.Image) {\n      return this.images[frame].height;\n    } else if (this.images[frame]) {\n      // Special case: Animation-from-spritesheet treats its images array differently.\n      return this.images[frame].frame.height;\n    } else {\n      return 1;\n    }\n  };\n\n}\n\ndefineLazyP5Property('Animation', boundConstructorFactory(Animation));\n\n/**\n * Represents a sprite sheet and all it's frames.  To be used with Animation,\n * or static drawing single frames.\n *\n *  There are two different ways to load a SpriteSheet\n *\n * 1. Given width, height that will be used for every frame and the\n *    number of frames to cycle through. The sprite sheet must have a\n *    uniform grid with consistent rows and columns.\n *\n * 2. Given an array of frame objects that define the position and\n *    dimensions of each frame.  This is Flexible because you can use\n *    sprite sheets that don't have uniform rows and columns.\n *\n * @example\n *     // Method 1 - Using width, height for each frame and number of frames\n *     explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n *\n *     // Method 2 - Using an array of objects that define each frame\n *     var player_frames = loadJSON('assets/tiles.json');\n *     player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);\n *\n * @class SpriteSheet\n * @constructor\n * @param image String image path or p5.Image object\n */\nfunction SpriteSheet(pInst) {\n  var spriteSheetArgs = Array.prototype.slice.call(arguments, 1);\n\n  this.image = null;\n  this.frames = [];\n  this.frame_width = 0;\n  this.frame_height = 0;\n  this.num_frames = 0;\n\n  /**\n   * Generate the frames data for this sprite sheet baesd on user params\n   * @private\n   * @method _generateSheetFrames\n   */\n  this._generateSheetFrames = function() {\n    var sX = 0, sY = 0;\n    for (var i = 0; i < this.num_frames; i++) {\n      this.frames.push(\n        {\n          'name': i,\n          'frame': {\n            'x': sX,\n            'y': sY,\n            'width': this.frame_width,\n            'height': this.frame_height\n          }\n        });\n      sX += this.frame_width;\n      if (sX >= this.image.width) {\n        sX = 0;\n        sY += this.frame_height;\n        if (sY >= this.image.height) {\n          sY = 0;\n        }\n      }\n    }\n  };\n\n  if (spriteSheetArgs.length === 2 && Array.isArray(spriteSheetArgs[1])) {\n    this.frames = spriteSheetArgs[1];\n    this.num_frames = this.frames.length;\n  } else if (spriteSheetArgs.length === 4 &&\n    (typeof spriteSheetArgs[1] === 'number') &&\n    (typeof spriteSheetArgs[2] === 'number') &&\n    (typeof spriteSheetArgs[3] === 'number')) {\n    this.frame_width = spriteSheetArgs[1];\n    this.frame_height = spriteSheetArgs[2];\n    this.num_frames = spriteSheetArgs[3];\n  }\n\n  if(spriteSheetArgs[0] instanceof p5.Image) {\n    this.image = spriteSheetArgs[0];\n    if (spriteSheetArgs.length === 4) {\n      this._generateSheetFrames();\n    }\n  } else {\n    if (spriteSheetArgs.length === 2) {\n      this.image = pInst.loadImage(spriteSheetArgs[0]);\n    } else if (spriteSheetArgs.length === 4) {\n      this.image = pInst.loadImage(spriteSheetArgs[0], this._generateSheetFrames.bind(this));\n    }\n  }\n\n  /**\n   * Draws a specific frame to the canvas.\n   * @param frame_name  Can either be a string name, or a numeric index.\n   * @param x   x position to draw the frame at\n   * @param y   y position to draw the frame at\n   * @param [width]   optional width to draw the frame\n   * @param [height]  optional height to draw the frame\n   * @method drawFrame\n   */\n  this.drawFrame = function(frame_name, x, y, width, height) {\n    var frameToDraw;\n    if (typeof frame_name === 'number') {\n      frameToDraw = this.frames[frame_name].frame;\n    } else {\n      for (var i = 0; i < this.frames.length; i++) {\n        if (this.frames[i].name === frame_name) {\n          frameToDraw = this.frames[i].frame;\n          break;\n        }\n      }\n    }\n    var dWidth = width || frameToDraw.width;\n    var dHeight = height || frameToDraw.height;\n    pInst.image(this.image, frameToDraw.x, frameToDraw.y,\n      frameToDraw.width, frameToDraw.height, x, y, dWidth, dHeight);\n  };\n\n  /**\n   * Objects are passed by reference so to have different sprites\n   * using the same animation you need to clone it.\n   *\n   * @method clone\n   * @return {SpriteSheet} A clone of the current SpriteSheet\n   */\n  this.clone = function() {\n    var myClone = new SpriteSheet(pInst); //empty\n\n    // Deep clone the frames by value not reference\n    for(var i = 0; i < this.frames.length; i++) {\n      var frame = this.frames[i].frame;\n      var cloneFrame = {\n        'name':frame.name,\n        'frame': {\n          'x':frame.x,\n          'y':frame.y,\n          'width':frame.width,\n          'height':frame.height\n        }\n      };\n      myClone.frames.push(cloneFrame);\n    }\n\n    // clone other fields\n    myClone.image = this.image;\n    myClone.frame_width = this.frame_width;\n    myClone.frame_height = this.frame_height;\n    myClone.num_frames = this.num_frames;\n\n    return myClone;\n  };\n}\n\ndefineLazyP5Property('SpriteSheet', boundConstructorFactory(SpriteSheet));\n\n//general constructor to be able to feed arguments as array\nfunction construct(constructor, args) {\n  function F() {\n    return constructor.apply(this, args);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n}\n\n\n\n\n\n/*\n * Javascript Quadtree\n * based on\n * https://github.com/timohausmann/quadtree-js/\n * Copyright © 2012 Timo Hausmann\n*/\n\nfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n  this.active = true;\n  this.max_objects\t= max_objects || 10;\n  this.max_levels\t\t= max_levels || 4;\n\n  this.level \t\t\t= level || 0;\n  this.bounds \t\t= bounds;\n\n  this.objects \t\t= [];\n  this.object_refs\t= [];\n  this.nodes \t\t\t= [];\n}\n\nQuadtree.prototype.updateBounds = function() {\n\n  //find maximum area\n  var objects = this.getAll();\n  var x = 10000;\n  var y = 10000;\n  var w = -10000;\n  var h = -10000;\n\n  for( var i=0; i < objects.length; i++ )\n    {\n      if(objects[i].position.x < x)\n        x = objects[i].position.x;\n      if(objects[i].position.y < y)\n        y = objects[i].position.y;\n      if(objects[i].position.x > w)\n        w = objects[i].position.x;\n      if(objects[i].position.y > h)\n        h = objects[i].position.y;\n    }\n\n\n  this.bounds = {\n    x:x,\n    y:y,\n    width:w,\n    height:h\n  };\n  //print(this.bounds);\n};\n\n/*\n\t * Split the node into 4 subnodes\n\t */\nQuadtree.prototype.split = function() {\n\n  var nextLevel\t= this.level + 1,\n      subWidth\t= Math.round( this.bounds.width / 2 ),\n      subHeight \t= Math.round( this.bounds.height / 2 ),\n      x \t\t\t= Math.round( this.bounds.x ),\n      y \t\t\t= Math.round( this.bounds.y );\n\n  //top right node\n  this.nodes[0] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //top left node\n  this.nodes[1] = new Quadtree({\n    x\t: x,\n    y\t: y,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom left node\n  this.nodes[2] = new Quadtree({\n    x\t: x,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n\n  //bottom right node\n  this.nodes[3] = new Quadtree({\n    x\t: x + subWidth,\n    y\t: y + subHeight,\n    width\t: subWidth,\n    height\t: subHeight\n  }, this.max_objects, this.max_levels, nextLevel);\n};\n\n\n/*\n\t * Determine the quadtrant for an area in this node\n\t */\nQuadtree.prototype.getIndex = function( pRect ) {\n  if(!pRect.collider)\n    return -1;\n  else\n  {\n    var index \t\t\t\t= -1,\n        verticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n        horizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n        //pRect can completely fit within the top quadrants\n        topQuadrant = (pRect.collider.top() < horizontalMidpoint && pRect.collider.top() + pRect.collider.size().y < horizontalMidpoint),\n\n        //pRect can completely fit within the bottom quadrants\n        bottomQuadrant = (pRect.collider.top() > horizontalMidpoint);\n\n    //pRect can completely fit within the left quadrants\n    if( pRect.collider.left() < verticalMidpoint && pRect.collider.left() + pRect.collider.size().x < verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 1;\n      } else if( bottomQuadrant ) {\n        index = 2;\n      }\n\n      //pRect can completely fit within the right quadrants\n    } else if( pRect.collider.left() > verticalMidpoint ) {\n      if( topQuadrant ) {\n        index = 0;\n      } else if( bottomQuadrant ) {\n        index = 3;\n      }\n    }\n\n    return index;\n  }\n};\n\n\n/*\n\t * Insert an object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t */\nQuadtree.prototype.insert = function( obj ) {\n  //avoid double insertion\n  if(this.objects.indexOf(obj) === -1)\n  {\n\n    var i = 0,\n        index;\n\n    //if we have subnodes ...\n    if( typeof this.nodes[0] !== 'undefined' ) {\n      index = this.getIndex( obj );\n\n      if( index !== -1 ) {\n        this.nodes[index].insert( obj );\n        return;\n      }\n    }\n\n    this.objects.push( obj );\n\n    if( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n      //split if we don't already have subnodes\n      if( typeof this.nodes[0] === 'undefined' ) {\n        this.split();\n      }\n\n      //add all objects to there corresponding subnodes\n      while( i < this.objects.length ) {\n\n        index = this.getIndex( this.objects[i] );\n\n        if( index !== -1 ) {\n          this.nodes[index].insert( this.objects.splice(i, 1)[0] );\n        } else {\n          i = i + 1;\n        }\n      }\n    }\n  }\n};\n\n\n/*\n\t * Return all objects that could collide with a given area\n\t */\nQuadtree.prototype.retrieve = function( pRect ) {\n\n\n  var index = this.getIndex( pRect ),\n      returnObjects = this.objects;\n\n  //if we have subnodes ...\n  if( typeof this.nodes[0] !== 'undefined' ) {\n\n    //if pRect fits into a subnode ..\n    if( index !== -1 ) {\n      returnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n      //if pRect does not fit into a subnode, check it against all subnodes\n    } else {\n      for( var i=0; i < this.nodes.length; i=i+1 ) {\n        returnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n      }\n    }\n  }\n\n  return returnObjects;\n};\n\nQuadtree.prototype.retrieveFromGroup = function( pRect, group ) {\n\n  var results = [];\n  var candidates = this.retrieve(pRect);\n\n  for(var i=0; i<candidates.length; i++)\n    if(group.contains(candidates[i]))\n    results.push(candidates[i]);\n\n  return results;\n};\n\n/*\n\t * Get all objects stored in the quadtree\n\t */\nQuadtree.prototype.getAll = function() {\n\n  var objects = this.objects;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n    objects = objects.concat( this.nodes[i].getAll() );\n  }\n\n  return objects;\n};\n\n\n/*\n\t * Get the node in which a certain object is stored\n\t */\nQuadtree.prototype.getObjectNode = function( obj ) {\n\n  var index;\n\n  //if there are no subnodes, object must be here\n  if( !this.nodes.length ) {\n\n    return this;\n\n  } else {\n\n    index = this.getIndex( obj );\n\n    //if the object does not fit into a subnode, it must be here\n    if( index === -1 ) {\n\n      return this;\n\n      //if it fits into a subnode, continue deeper search there\n    } else {\n      var node = this.nodes[index].getObjectNode( obj );\n      if( node ) return node;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n\t * Removes a specific object from the quadtree\n\t * Does not delete empty subnodes. See cleanup-function\n\t */\nQuadtree.prototype.removeObject = function( obj ) {\n\n  var node = this.getObjectNode( obj ),\n      index = node.objects.indexOf( obj );\n\n  if( index === -1 ) return false;\n\n  node.objects.splice( index, 1);\n};\n\n\n/*\n\t * Clear the quadtree and delete all objects\n\t */\nQuadtree.prototype.clear = function() {\n\n  this.objects = [];\n\n  if( !this.nodes.length ) return;\n\n  for( var i=0; i < this.nodes.length; i=i+1 ) {\n\n    this.nodes[i].clear();\n  }\n\n  this.nodes = [];\n};\n\n\n/*\n\t * Clean up the quadtree\n\t * Like clear, but objects won't be deleted but re-inserted\n\t */\nQuadtree.prototype.cleanup = function() {\n\n  var objects = this.getAll();\n\n  this.clear();\n\n  for( var i=0; i < objects.length; i++ ) {\n    this.insert( objects[i] );\n  }\n};\n\n\n\nfunction updateTree() {\n  if(this.quadTree.active)\n  {\n    this.quadTree.updateBounds();\n    this.quadTree.cleanup();\n  }\n}\n\n//keyboard input\np5.prototype.registerMethod('pre', p5.prototype.readPresses);\n\n//automatic sprite update\np5.prototype.registerMethod('pre', p5.prototype.updateSprites);\n\n//quadtree update\np5.prototype.registerMethod('post', updateTree);\n\n//camera push and pop\np5.prototype.registerMethod('pre', cameraPush);\np5.prototype.registerMethod('post', cameraPop);\n\n//deltaTime\n//p5.prototype.registerMethod('pre', updateDelta);\n\n/**\n * Log a warning message to the host console, using native `console.warn`\n * if it is available but falling back on `console.log` if not.  If no\n * console is available, this method will fail silently.\n * @method _warn\n * @param {!string} message\n * @private\n */\np5.prototype._warn = function(message) {\n  var console = window.console;\n\n  if(console)\n  {\n    if('function' === typeof console.warn)\n    {\n      console.warn(message);\n    }\n    else if('function' === typeof console.log)\n    {\n      console.log('Warning: ' + message);\n    }\n  }\n};\n\n}));\n"]}